/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.syntax3.lexer.parser;

import org.sablecc.sablecc.syntax3.lexer.lexer.*;
import org.sablecc.sablecc.syntax3.lexer.node.*;
import org.sablecc.sablecc.syntax3.lexer.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    @SuppressWarnings({"unchecked","unused"})
    private void push(int numstate, ArrayList listNode) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(this.lexer.next());
                        push(this.action[1], list);
                    }
		    break;
                case REDUCE:
                    switch(this.action[1])
                    {
                    case 0: /* reduce AAgrammar1Grammar */
		    {
			ArrayList list = new0();
			push(goTo(0), list);
		    }
		    break;
                    case 1: /* reduce AAgrammar2Grammar */
		    {
			ArrayList list = new1();
			push(goTo(0), list);
		    }
		    break;
                    case 2: /* reduce AAgrammar3Grammar */
		    {
			ArrayList list = new2();
			push(goTo(0), list);
		    }
		    break;
                    case 3: /* reduce AAgrammar4Grammar */
		    {
			ArrayList list = new3();
			push(goTo(0), list);
		    }
		    break;
                    case 4: /* reduce AAgrammar5Grammar */
		    {
			ArrayList list = new4();
			push(goTo(0), list);
		    }
		    break;
                    case 5: /* reduce AAgrammar6Grammar */
		    {
			ArrayList list = new5();
			push(goTo(0), list);
		    }
		    break;
                    case 6: /* reduce AAgrammar7Grammar */
		    {
			ArrayList list = new6();
			push(goTo(0), list);
		    }
		    break;
                    case 7: /* reduce AAgrammar8Grammar */
		    {
			ArrayList list = new7();
			push(goTo(0), list);
		    }
		    break;
                    case 8: /* reduce AAgrammar9Grammar */
		    {
			ArrayList list = new8();
			push(goTo(0), list);
		    }
		    break;
                    case 9: /* reduce AAgrammar10Grammar */
		    {
			ArrayList list = new9();
			push(goTo(0), list);
		    }
		    break;
                    case 10: /* reduce AAgrammar11Grammar */
		    {
			ArrayList list = new10();
			push(goTo(0), list);
		    }
		    break;
                    case 11: /* reduce AAgrammar12Grammar */
		    {
			ArrayList list = new11();
			push(goTo(0), list);
		    }
		    break;
                    case 12: /* reduce AAgrammar13Grammar */
		    {
			ArrayList list = new12();
			push(goTo(0), list);
		    }
		    break;
                    case 13: /* reduce AAgrammar14Grammar */
		    {
			ArrayList list = new13();
			push(goTo(0), list);
		    }
		    break;
                    case 14: /* reduce AAgrammar15Grammar */
		    {
			ArrayList list = new14();
			push(goTo(0), list);
		    }
		    break;
                    case 15: /* reduce AAgrammar16Grammar */
		    {
			ArrayList list = new15();
			push(goTo(0), list);
		    }
		    break;
                    case 16: /* reduce AAgrammar17Grammar */
		    {
			ArrayList list = new16();
			push(goTo(0), list);
		    }
		    break;
                    case 17: /* reduce AAgrammar18Grammar */
		    {
			ArrayList list = new17();
			push(goTo(0), list);
		    }
		    break;
                    case 18: /* reduce AAgrammar19Grammar */
		    {
			ArrayList list = new18();
			push(goTo(0), list);
		    }
		    break;
                    case 19: /* reduce AAgrammar20Grammar */
		    {
			ArrayList list = new19();
			push(goTo(0), list);
		    }
		    break;
                    case 20: /* reduce AAgrammar21Grammar */
		    {
			ArrayList list = new20();
			push(goTo(0), list);
		    }
		    break;
                    case 21: /* reduce AAgrammar22Grammar */
		    {
			ArrayList list = new21();
			push(goTo(0), list);
		    }
		    break;
                    case 22: /* reduce AAgrammar23Grammar */
		    {
			ArrayList list = new22();
			push(goTo(0), list);
		    }
		    break;
                    case 23: /* reduce AAgrammar24Grammar */
		    {
			ArrayList list = new23();
			push(goTo(0), list);
		    }
		    break;
                    case 24: /* reduce AAgrammar25Grammar */
		    {
			ArrayList list = new24();
			push(goTo(0), list);
		    }
		    break;
                    case 25: /* reduce AAgrammar26Grammar */
		    {
			ArrayList list = new25();
			push(goTo(0), list);
		    }
		    break;
                    case 26: /* reduce AAgrammar27Grammar */
		    {
			ArrayList list = new26();
			push(goTo(0), list);
		    }
		    break;
                    case 27: /* reduce AAgrammar28Grammar */
		    {
			ArrayList list = new27();
			push(goTo(0), list);
		    }
		    break;
                    case 28: /* reduce AAgrammar29Grammar */
		    {
			ArrayList list = new28();
			push(goTo(0), list);
		    }
		    break;
                    case 29: /* reduce AAgrammar30Grammar */
		    {
			ArrayList list = new29();
			push(goTo(0), list);
		    }
		    break;
                    case 30: /* reduce AAgrammar31Grammar */
		    {
			ArrayList list = new30();
			push(goTo(0), list);
		    }
		    break;
                    case 31: /* reduce AAgrammar32Grammar */
		    {
			ArrayList list = new31();
			push(goTo(0), list);
		    }
		    break;
                    case 32: /* reduce AAlexer1Lexer */
		    {
			ArrayList list = new32();
			push(goTo(1), list);
		    }
		    break;
                    case 33: /* reduce AAlexer2Lexer */
		    {
			ArrayList list = new33();
			push(goTo(1), list);
		    }
		    break;
                    case 34: /* reduce AAlexer3Lexer */
		    {
			ArrayList list = new34();
			push(goTo(1), list);
		    }
		    break;
                    case 35: /* reduce AAlexer4Lexer */
		    {
			ArrayList list = new35();
			push(goTo(1), list);
		    }
		    break;
                    case 36: /* reduce AAlexer5Lexer */
		    {
			ArrayList list = new36();
			push(goTo(1), list);
		    }
		    break;
                    case 37: /* reduce AAlexer6Lexer */
		    {
			ArrayList list = new37();
			push(goTo(1), list);
		    }
		    break;
                    case 38: /* reduce AAlexer7Lexer */
		    {
			ArrayList list = new38();
			push(goTo(1), list);
		    }
		    break;
                    case 39: /* reduce AAlexer8Lexer */
		    {
			ArrayList list = new39();
			push(goTo(1), list);
		    }
		    break;
                    case 40: /* reduce AAlexer9Lexer */
		    {
			ArrayList list = new40();
			push(goTo(1), list);
		    }
		    break;
                    case 41: /* reduce AAlexer10Lexer */
		    {
			ArrayList list = new41();
			push(goTo(1), list);
		    }
		    break;
                    case 42: /* reduce AAlexer11Lexer */
		    {
			ArrayList list = new42();
			push(goTo(1), list);
		    }
		    break;
                    case 43: /* reduce AAlexer12Lexer */
		    {
			ArrayList list = new43();
			push(goTo(1), list);
		    }
		    break;
                    case 44: /* reduce AAlexer13Lexer */
		    {
			ArrayList list = new44();
			push(goTo(1), list);
		    }
		    break;
                    case 45: /* reduce AAlexer14Lexer */
		    {
			ArrayList list = new45();
			push(goTo(1), list);
		    }
		    break;
                    case 46: /* reduce AAlexer15Lexer */
		    {
			ArrayList list = new46();
			push(goTo(1), list);
		    }
		    break;
                    case 47: /* reduce AAlexer16Lexer */
		    {
			ArrayList list = new47();
			push(goTo(1), list);
		    }
		    break;
                    case 48: /* reduce ANamedExpression */
		    {
			ArrayList list = new48();
			push(goTo(2), list);
		    }
		    break;
                    case 49: /* reduce ASimpleExpression */
		    {
			ArrayList list = new49();
			push(goTo(3), list);
		    }
		    break;
                    case 50: /* reduce AOrExpression */
		    {
			ArrayList list = new50();
			push(goTo(3), list);
		    }
		    break;
                    case 51: /* reduce ASimpleTopExpression */
		    {
			ArrayList list = new51();
			push(goTo(4), list);
		    }
		    break;
                    case 52: /* reduce AAlooktopexpression1TopExpression */
		    {
			ArrayList list = new52();
			push(goTo(4), list);
		    }
		    break;
                    case 53: /* reduce AAlooktopexpression2TopExpression */
		    {
			ArrayList list = new53();
			push(goTo(4), list);
		    }
		    break;
                    case 54: /* reduce AAlooktopexpression3TopExpression */
		    {
			ArrayList list = new54();
			push(goTo(4), list);
		    }
		    break;
                    case 55: /* reduce AAlooktopexpression4TopExpression */
		    {
			ArrayList list = new55();
			push(goTo(4), list);
		    }
		    break;
                    case 56: /* reduce AAlookbacktopexpression1TopExpression */
		    {
			ArrayList list = new56();
			push(goTo(4), list);
		    }
		    break;
                    case 57: /* reduce AAlookbacktopexpression2TopExpression */
		    {
			ArrayList list = new57();
			push(goTo(4), list);
		    }
		    break;
                    case 58: /* reduce AAlookaheadtopexpression1TopExpression */
		    {
			ArrayList list = new58();
			push(goTo(4), list);
		    }
		    break;
                    case 59: /* reduce AAlookaheadtopexpression2TopExpression */
		    {
			ArrayList list = new59();
			push(goTo(4), list);
		    }
		    break;
                    case 60: /* reduce AShortestTopExpression */
		    {
			ArrayList list = new60();
			push(goTo(4), list);
		    }
		    break;
                    case 61: /* reduce ALongestTopExpression */
		    {
			ArrayList list = new61();
			push(goTo(4), list);
		    }
		    break;
                    case 62: /* reduce ASubtractionTopExpression */
		    {
			ArrayList list = new62();
			push(goTo(4), list);
		    }
		    break;
                    case 63: /* reduce AExceptTopExpression */
		    {
			ArrayList list = new63();
			push(goTo(4), list);
		    }
		    break;
                    case 64: /* reduce AIntersectionTopExpression */
		    {
			ArrayList list = new64();
			push(goTo(4), list);
		    }
		    break;
                    case 65: /* reduce AIntervalTopExpression */
		    {
			ArrayList list = new65();
			push(goTo(4), list);
		    }
		    break;
                    case 66: /* reduce ANormalAndExpression */
		    {
			ArrayList list = new66();
			push(goTo(5), list);
		    }
		    break;
                    case 67: /* reduce ARecursiveAndExpression */
		    {
			ArrayList list = new67();
			push(goTo(5), list);
		    }
		    break;
                    case 68: /* reduce ASimpleConcatenation */
		    {
			ArrayList list = new68();
			push(goTo(6), list);
		    }
		    break;
                    case 69: /* reduce ARecursiveConcatenation */
		    {
			ArrayList list = new69();
			push(goTo(6), list);
		    }
		    break;
                    case 70: /* reduce ASimpleUnaryExpression */
		    {
			ArrayList list = new70();
			push(goTo(7), list);
		    }
		    break;
                    case 71: /* reduce AUnaryOperatorUnaryExpression */
		    {
			ArrayList list = new71();
			push(goTo(7), list);
		    }
		    break;
                    case 72: /* reduce ASeparatedUnaryExpression */
		    {
			ArrayList list = new72();
			push(goTo(7), list);
		    }
		    break;
                    case 73: /* reduce AUnitTerm */
		    {
			ArrayList list = new73();
			push(goTo(8), list);
		    }
		    break;
                    case 74: /* reduce AEpsilonTerm */
		    {
			ArrayList list = new74();
			push(goTo(8), list);
		    }
		    break;
                    case 75: /* reduce AAnyTerm */
		    {
			ArrayList list = new75();
			push(goTo(8), list);
		    }
		    break;
                    case 76: /* reduce AParTerm */
		    {
			ArrayList list = new76();
			push(goTo(8), list);
		    }
		    break;
                    case 77: /* reduce ANameUnit */
		    {
			ArrayList list = new77();
			push(goTo(9), list);
		    }
		    break;
                    case 78: /* reduce AStringUnit */
		    {
			ArrayList list = new78();
			push(goTo(9), list);
		    }
		    break;
                    case 79: /* reduce ACharacterUnit */
		    {
			ArrayList list = new79();
			push(goTo(9), list);
		    }
		    break;
                    case 80: /* reduce AStartUnit */
		    {
			ArrayList list = new80();
			push(goTo(9), list);
		    }
		    break;
                    case 81: /* reduce AEndUnit */
		    {
			ArrayList list = new81();
			push(goTo(9), list);
		    }
		    break;
                    case 82: /* reduce ACharCharacter */
		    {
			ArrayList list = new82();
			push(goTo(10), list);
		    }
		    break;
                    case 83: /* reduce ADecCharacter */
		    {
			ArrayList list = new83();
			push(goTo(10), list);
		    }
		    break;
                    case 84: /* reduce AHexCharacter */
		    {
			ArrayList list = new84();
			push(goTo(10), list);
		    }
		    break;
                    case 85: /* reduce AZeroOrOneUnaryOperator */
		    {
			ArrayList list = new85();
			push(goTo(11), list);
		    }
		    break;
                    case 86: /* reduce AManyUnaryOperator */
		    {
			ArrayList list = new86();
			push(goTo(11), list);
		    }
		    break;
                    case 87: /* reduce AZeroOrMoreManyOperator */
		    {
			ArrayList list = new87();
			push(goTo(12), list);
		    }
		    break;
                    case 88: /* reduce AOneOrMoreManyOperator */
		    {
			ArrayList list = new88();
			push(goTo(12), list);
		    }
		    break;
                    case 89: /* reduce ANumberManyOperator */
		    {
			ArrayList list = new89();
			push(goTo(12), list);
		    }
		    break;
                    case 90: /* reduce AIntervalManyOperator */
		    {
			ArrayList list = new90();
			push(goTo(12), list);
		    }
		    break;
                    case 91: /* reduce AAtLeastManyOperator */
		    {
			ArrayList list = new91();
			push(goTo(12), list);
		    }
		    break;
                    case 92: /* reduce AAlexerpriorities1LexerPriorities */
		    {
			ArrayList list = new92();
			push(goTo(13), list);
		    }
		    break;
                    case 93: /* reduce AAlexerpriorities2LexerPriorities */
		    {
			ArrayList list = new93();
			push(goTo(13), list);
		    }
		    break;
                    case 94: /* reduce ALexerPriority */
		    {
			ArrayList list = new94();
			push(goTo(14), list);
		    }
		    break;
                    case 95: /* reduce AAlexercontexts1LexerContexts */
		    {
			ArrayList list = new95();
			push(goTo(15), list);
		    }
		    break;
                    case 96: /* reduce AAlexercontexts2LexerContexts */
		    {
			ArrayList list = new96();
			push(goTo(15), list);
		    }
		    break;
                    case 97: /* reduce ALexerDefaultContext */
		    {
			ArrayList list = new97();
			push(goTo(16), list);
		    }
		    break;
                    case 98: /* reduce ALexerNamedContext */
		    {
			ArrayList list = new98();
			push(goTo(17), list);
		    }
		    break;
                    case 99: /* reduce AAlexercontextbody1LexerContextBody */
		    {
			ArrayList list = new99();
			push(goTo(18), list);
		    }
		    break;
                    case 100: /* reduce AAlexercontextbody2LexerContextBody */
		    {
			ArrayList list = new100();
			push(goTo(18), list);
		    }
		    break;
                    case 101: /* reduce AAlexercontextbody3LexerContextBody */
		    {
			ArrayList list = new101();
			push(goTo(18), list);
		    }
		    break;
                    case 102: /* reduce AAlexercontextbody4LexerContextBody */
		    {
			ArrayList list = new102();
			push(goTo(18), list);
		    }
		    break;
                    case 103: /* reduce AAtokens1Tokens */
		    {
			ArrayList list = new103();
			push(goTo(19), list);
		    }
		    break;
                    case 104: /* reduce AAtokens2Tokens */
		    {
			ArrayList list = new104();
			push(goTo(19), list);
		    }
		    break;
                    case 105: /* reduce AAtokensbody1TokensBody */
		    {
			ArrayList list = new105();
			push(goTo(20), list);
		    }
		    break;
                    case 106: /* reduce AAtokensbody2TokensBody */
		    {
			ArrayList list = new106();
			push(goTo(20), list);
		    }
		    break;
                    case 107: /* reduce AAignored1Ignored */
		    {
			ArrayList list = new107();
			push(goTo(21), list);
		    }
		    break;
                    case 108: /* reduce AAignored2Ignored */
		    {
			ArrayList list = new108();
			push(goTo(21), list);
		    }
		    break;
                    case 109: /* reduce AAignoredbody1IgnoredBody */
		    {
			ArrayList list = new109();
			push(goTo(22), list);
		    }
		    break;
                    case 110: /* reduce AAignoredbody2IgnoredBody */
		    {
			ArrayList list = new110();
			push(goTo(22), list);
		    }
		    break;
                    case 111: /* reduce AAunitlist1UnitList */
		    {
			ArrayList list = new111();
			push(goTo(23), list);
		    }
		    break;
                    case 112: /* reduce AAunitlist2UnitList */
		    {
			ArrayList list = new112();
			push(goTo(23), list);
		    }
		    break;
                    case 113: /* reduce AAunitlist3UnitList */
		    {
			ArrayList list = new113();
			push(goTo(23), list);
		    }
		    break;
                    case 114: /* reduce AAunitlist4UnitList */
		    {
			ArrayList list = new114();
			push(goTo(23), list);
		    }
		    break;
                    case 115: /* reduce AAdditionalUnit */
		    {
			ArrayList list = new115();
			push(goTo(24), list);
		    }
		    break;
                    case 116: /* reduce AAinvestigators1Investigators */
		    {
			ArrayList list = new116();
			push(goTo(25), list);
		    }
		    break;
                    case 117: /* reduce AAinvestigators2Investigators */
		    {
			ArrayList list = new117();
			push(goTo(25), list);
		    }
		    break;
                    case 118: /* reduce AInvestigator */
		    {
			ArrayList list = new118();
			push(goTo(26), list);
		    }
		    break;
                    case 119: /* reduce AAselectors1Selectors */
		    {
			ArrayList list = new119();
			push(goTo(27), list);
		    }
		    break;
                    case 120: /* reduce AAselectors2Selectors */
		    {
			ArrayList list = new120();
			push(goTo(27), list);
		    }
		    break;
                    case 121: /* reduce ASelectionSelector */
		    {
			ArrayList list = new121();
			push(goTo(28), list);
		    }
		    break;
                    case 122: /* reduce ASelection */
		    {
			ArrayList list = new122();
			push(goTo(29), list);
		    }
		    break;
                    case 123: /* reduce AAparser1Parser */
		    {
			ArrayList list = new123();
			push(goTo(30), list);
		    }
		    break;
                    case 124: /* reduce AAparser2$Aroot11Parser */
		    {
			ArrayList list = new124();
			push(goTo(30), list);
		    }
		    break;
                    case 125: /* reduce AAparser2$Aroot21Parser */
		    {
			ArrayList list = new125();
			push(goTo(30), list);
		    }
		    break;
                    case 126: /* reduce AAparser3Parser */
		    {
			ArrayList list = new126();
			push(goTo(30), list);
		    }
		    break;
                    case 127: /* reduce AAparser4$Aroot11Parser */
		    {
			ArrayList list = new127();
			push(goTo(30), list);
		    }
		    break;
                    case 128: /* reduce AAparser4$Aroot21Parser */
		    {
			ArrayList list = new128();
			push(goTo(30), list);
		    }
		    break;
                    case 129: /* reduce AAparser5Parser */
		    {
			ArrayList list = new129();
			push(goTo(30), list);
		    }
		    break;
                    case 130: /* reduce AAparser6$Aroot11Parser */
		    {
			ArrayList list = new130();
			push(goTo(30), list);
		    }
		    break;
                    case 131: /* reduce AAparser6$Aroot21Parser */
		    {
			ArrayList list = new131();
			push(goTo(30), list);
		    }
		    break;
                    case 132: /* reduce AAparser7Parser */
		    {
			ArrayList list = new132();
			push(goTo(30), list);
		    }
		    break;
                    case 133: /* reduce AAparser8$Aroot11Parser */
		    {
			ArrayList list = new133();
			push(goTo(30), list);
		    }
		    break;
                    case 134: /* reduce AAparser8$Aroot21Parser */
		    {
			ArrayList list = new134();
			push(goTo(30), list);
		    }
		    break;
                    case 135: /* reduce AArootbody1RootBody */
		    {
			ArrayList list = new135();
			push(goTo(31), list);
		    }
		    break;
                    case 136: /* reduce AArootbody2RootBody */
		    {
			ArrayList list = new136();
			push(goTo(31), list);
		    }
		    break;
                    case 137: /* reduce AAidentifierlist1IdentifierList */
		    {
			ArrayList list = new137();
			push(goTo(32), list);
		    }
		    break;
                    case 138: /* reduce AAidentifierlist2IdentifierList */
		    {
			ArrayList list = new138();
			push(goTo(32), list);
		    }
		    break;
                    case 139: /* reduce AAidentifierlist3IdentifierList */
		    {
			ArrayList list = new139();
			push(goTo(32), list);
		    }
		    break;
                    case 140: /* reduce AAidentifierlist4IdentifierList */
		    {
			ArrayList list = new140();
			push(goTo(32), list);
		    }
		    break;
                    case 141: /* reduce AAdditionalIdentifier */
		    {
			ArrayList list = new141();
			push(goTo(33), list);
		    }
		    break;
                    case 142: /* reduce AAparsercontexts1ParserContexts */
		    {
			ArrayList list = new142();
			push(goTo(34), list);
		    }
		    break;
                    case 143: /* reduce AAparsercontexts2ParserContexts */
		    {
			ArrayList list = new143();
			push(goTo(34), list);
		    }
		    break;
                    case 144: /* reduce AAparserdefaultcontext1ParserDefaultContext */
		    {
			ArrayList list = new144();
			push(goTo(35), list);
		    }
		    break;
                    case 145: /* reduce AAparserdefaultcontext2ParserDefaultContext */
		    {
			ArrayList list = new145();
			push(goTo(35), list);
		    }
		    break;
                    case 146: /* reduce AAparsernamedcontext1ParserNamedContext */
		    {
			ArrayList list = new146();
			push(goTo(36), list);
		    }
		    break;
                    case 147: /* reduce AAparsernamedcontext2ParserNamedContext */
		    {
			ArrayList list = new147();
			push(goTo(36), list);
		    }
		    break;
                    case 148: /* reduce AAparserproduction1ParserProduction */
		    {
			ArrayList list = new148();
			push(goTo(37), list);
		    }
		    break;
                    case 149: /* reduce AAparserproduction2ParserProduction */
		    {
			ArrayList list = new149();
			push(goTo(37), list);
		    }
		    break;
                    case 150: /* reduce ADanglingQualifier */
		    {
			ArrayList list = new150();
			push(goTo(38), list);
		    }
		    break;
                    case 151: /* reduce ATokenQualifier */
		    {
			ArrayList list = new151();
			push(goTo(38), list);
		    }
		    break;
                    case 152: /* reduce AAparserproductionbody1ParserProductionBody */
		    {
			ArrayList list = new152();
			push(goTo(39), list);
		    }
		    break;
                    case 153: /* reduce AAparserproductionbody2ParserProductionBody */
		    {
			ArrayList list = new153();
			push(goTo(39), list);
		    }
		    break;
                    case 154: /* reduce AAparseralternatives1ParserAlternatives */
		    {
			ArrayList list = new154();
			push(goTo(40), list);
		    }
		    break;
                    case 155: /* reduce AAparseralternatives2ParserAlternatives */
		    {
			ArrayList list = new155();
			push(goTo(40), list);
		    }
		    break;
                    case 156: /* reduce AAdditionalParserAlternative */
		    {
			ArrayList list = new156();
			push(goTo(41), list);
		    }
		    break;
                    case 157: /* reduce AAnormalparseralternative1ParserAlternative */
		    {
			ArrayList list = new157();
			push(goTo(42), list);
		    }
		    break;
                    case 158: /* reduce AAnormalparseralternative2ParserAlternative */
		    {
			ArrayList list = new158();
			push(goTo(42), list);
		    }
		    break;
                    case 159: /* reduce AAnormalparseralternative3ParserAlternative */
		    {
			ArrayList list = new159();
			push(goTo(42), list);
		    }
		    break;
                    case 160: /* reduce AAnormalparseralternative4ParserAlternative */
		    {
			ArrayList list = new160();
			push(goTo(42), list);
		    }
		    break;
                    case 161: /* reduce AAemptyparseralternative1ParserAlternative */
		    {
			ArrayList list = new161();
			push(goTo(42), list);
		    }
		    break;
                    case 162: /* reduce AAemptyparseralternative2ParserAlternative */
		    {
			ArrayList list = new162();
			push(goTo(42), list);
		    }
		    break;
                    case 163: /* reduce AAemptyparseralternative3ParserAlternative */
		    {
			ArrayList list = new163();
			push(goTo(42), list);
		    }
		    break;
                    case 164: /* reduce AAemptyparseralternative4ParserAlternative */
		    {
			ArrayList list = new164();
			push(goTo(42), list);
		    }
		    break;
                    case 165: /* reduce AAnormalelement1Element */
		    {
			ArrayList list = new165();
			push(goTo(43), list);
		    }
		    break;
                    case 166: /* reduce AAnormalelement2Element */
		    {
			ArrayList list = new166();
			push(goTo(43), list);
		    }
		    break;
                    case 167: /* reduce AAnormalelement3Element */
		    {
			ArrayList list = new167();
			push(goTo(43), list);
		    }
		    break;
                    case 168: /* reduce AAnormalelement4Element */
		    {
			ArrayList list = new168();
			push(goTo(43), list);
		    }
		    break;
                    case 169: /* reduce AAseparatedelement1Element */
		    {
			ArrayList list = new169();
			push(goTo(43), list);
		    }
		    break;
                    case 170: /* reduce AAseparatedelement2Element */
		    {
			ArrayList list = new170();
			push(goTo(43), list);
		    }
		    break;
                    case 171: /* reduce AAalternatedelement1Element */
		    {
			ArrayList list = new171();
			push(goTo(43), list);
		    }
		    break;
                    case 172: /* reduce AAalternatedelement2Element */
		    {
			ArrayList list = new172();
			push(goTo(43), list);
		    }
		    break;
                    case 173: /* reduce AAdanglingelement1DanglingElement */
		    {
			ArrayList list = new173();
			push(goTo(44), list);
		    }
		    break;
                    case 174: /* reduce AAdanglingelement2DanglingElement */
		    {
			ArrayList list = new174();
			push(goTo(44), list);
		    }
		    break;
                    case 175: /* reduce AAparserpriorities1ParserPriorities */
		    {
			ArrayList list = new175();
			push(goTo(45), list);
		    }
		    break;
                    case 176: /* reduce AAparserpriorities2ParserPriorities */
		    {
			ArrayList list = new176();
			push(goTo(45), list);
		    }
		    break;
                    case 177: /* reduce ALeftParserPriority */
		    {
			ArrayList list = new177();
			push(goTo(46), list);
		    }
		    break;
                    case 178: /* reduce ARightParserPriority */
		    {
			ArrayList list = new178();
			push(goTo(46), list);
		    }
		    break;
                    case 179: /* reduce AUnaryParserPriority */
		    {
			ArrayList list = new179();
			push(goTo(46), list);
		    }
		    break;
                    case 180: /* reduce AAtransformation1Transformation */
		    {
			ArrayList list = new180();
			push(goTo(47), list);
		    }
		    break;
                    case 181: /* reduce AAtransformation2Transformation */
		    {
			ArrayList list = new181();
			push(goTo(47), list);
		    }
		    break;
                    case 182: /* reduce AAtransformation3Transformation */
		    {
			ArrayList list = new182();
			push(goTo(47), list);
		    }
		    break;
                    case 183: /* reduce AAtransformation4Transformation */
		    {
			ArrayList list = new183();
			push(goTo(47), list);
		    }
		    break;
                    case 184: /* reduce AAproductiontransformations1ProductionTransformations */
		    {
			ArrayList list = new184();
			push(goTo(48), list);
		    }
		    break;
                    case 185: /* reduce AAproductiontransformations2ProductionTransformations */
		    {
			ArrayList list = new185();
			push(goTo(48), list);
		    }
		    break;
                    case 186: /* reduce AAproductiontransformation1ProductionTransformation */
		    {
			ArrayList list = new186();
			push(goTo(49), list);
		    }
		    break;
                    case 187: /* reduce AAproductiontransformation2ProductionTransformation */
		    {
			ArrayList list = new187();
			push(goTo(49), list);
		    }
		    break;
                    case 188: /* reduce AAalternativetransformations1AlternativeTransformations */
		    {
			ArrayList list = new188();
			push(goTo(50), list);
		    }
		    break;
                    case 189: /* reduce AAalternativetransformations2AlternativeTransformations */
		    {
			ArrayList list = new189();
			push(goTo(50), list);
		    }
		    break;
                    case 190: /* reduce AAalternativetransformation1AlternativeTransformation */
		    {
			ArrayList list = new190();
			push(goTo(51), list);
		    }
		    break;
                    case 191: /* reduce AAalternativetransformation2AlternativeTransformation */
		    {
			ArrayList list = new191();
			push(goTo(51), list);
		    }
		    break;
                    case 192: /* reduce AUnnamedAlternativeReference */
		    {
			ArrayList list = new192();
			push(goTo(52), list);
		    }
		    break;
                    case 193: /* reduce ANamedAlternativeReference */
		    {
			ArrayList list = new193();
			push(goTo(52), list);
		    }
		    break;
                    case 194: /* reduce ANullTransformationElement */
		    {
			ArrayList list = new194();
			push(goTo(53), list);
		    }
		    break;
                    case 195: /* reduce AReference$Natural1TransformationElement */
		    {
			ArrayList list = new195();
			push(goTo(53), list);
		    }
		    break;
                    case 196: /* reduce AReference$Transformed1TransformationElement */
		    {
			ArrayList list = new196();
			push(goTo(53), list);
		    }
		    break;
                    case 197: /* reduce AAnewtransformationelement1TransformationElement */
		    {
			ArrayList list = new197();
			push(goTo(53), list);
		    }
		    break;
                    case 198: /* reduce AAnewtransformationelement2TransformationElement */
		    {
			ArrayList list = new198();
			push(goTo(53), list);
		    }
		    break;
                    case 199: /* reduce AAlisttransformationelement1TransformationElement */
		    {
			ArrayList list = new199();
			push(goTo(53), list);
		    }
		    break;
                    case 200: /* reduce AAlisttransformationelement2TransformationElement */
		    {
			ArrayList list = new200();
			push(goTo(53), list);
		    }
		    break;
                    case 201: /* reduce AReference$Natural1ListElement */
		    {
			ArrayList list = new201();
			push(goTo(54), list);
		    }
		    break;
                    case 202: /* reduce AReference$Transformed1ListElement */
		    {
			ArrayList list = new202();
			push(goTo(54), list);
		    }
		    break;
                    case 203: /* reduce AListReference$Natural1ListElement */
		    {
			ArrayList list = new203();
			push(goTo(54), list);
		    }
		    break;
                    case 204: /* reduce AListReference$Transformed1ListElement */
		    {
			ArrayList list = new204();
			push(goTo(54), list);
		    }
		    break;
                    case 205: /* reduce ALeftListReference$Natural1ListElement */
		    {
			ArrayList list = new205();
			push(goTo(54), list);
		    }
		    break;
                    case 206: /* reduce ALeftListReference$Transformed1ListElement */
		    {
			ArrayList list = new206();
			push(goTo(54), list);
		    }
		    break;
                    case 207: /* reduce ARightListReference$Natural1ListElement */
		    {
			ArrayList list = new207();
			push(goTo(54), list);
		    }
		    break;
                    case 208: /* reduce ARightListReference$Transformed1ListElement */
		    {
			ArrayList list = new208();
			push(goTo(54), list);
		    }
		    break;
                    case 209: /* reduce AAnewlistelement1ListElement */
		    {
			ArrayList list = new209();
			push(goTo(54), list);
		    }
		    break;
                    case 210: /* reduce AAnewlistelement2ListElement */
		    {
			ArrayList list = new210();
			push(goTo(54), list);
		    }
		    break;
                    case 211: /* reduce AAtree1Tree */
		    {
			ArrayList list = new211();
			push(goTo(55), list);
		    }
		    break;
                    case 212: /* reduce AAtree2Tree */
		    {
			ArrayList list = new212();
			push(goTo(55), list);
		    }
		    break;
                    case 213: /* reduce ATreeProduction */
		    {
			ArrayList list = new213();
			push(goTo(56), list);
		    }
		    break;
                    case 214: /* reduce AAtreealternatives1TreeAlternatives */
		    {
			ArrayList list = new214();
			push(goTo(57), list);
		    }
		    break;
                    case 215: /* reduce AAtreealternatives2TreeAlternatives */
		    {
			ArrayList list = new215();
			push(goTo(57), list);
		    }
		    break;
                    case 216: /* reduce AAdditionalTreeAlternative */
		    {
			ArrayList list = new216();
			push(goTo(58), list);
		    }
		    break;
                    case 217: /* reduce AAnormaltreealternative1TreeAlternative */
		    {
			ArrayList list = new217();
			push(goTo(59), list);
		    }
		    break;
                    case 218: /* reduce AAnormaltreealternative2TreeAlternative */
		    {
			ArrayList list = new218();
			push(goTo(59), list);
		    }
		    break;
                    case 219: /* reduce AAemptytreealternative1TreeAlternative */
		    {
			ArrayList list = new219();
			push(goTo(59), list);
		    }
		    break;
                    case 220: /* reduce AAemptytreealternative2TreeAlternative */
		    {
			ArrayList list = new220();
			push(goTo(59), list);
		    }
		    break;
                    case 221: /* reduce ATerminal$NamedExpression */
		    {
			ArrayList list = new221();
			push(goTo(60), list);
		    }
		    break;
                    case 222: /* reduce ANonTerminal$NamedExpression */
		    {
			ArrayList list = new222();
			push(goTo(60), list);
		    }
		    break;
                    case 223: /* reduce ATerminal$LexerPriority */
		    {
			ArrayList list = new223();
			push(goTo(61), list);
		    }
		    break;
                    case 224: /* reduce ANonTerminal$LexerPriority */
		    {
			ArrayList list = new224();
			push(goTo(61), list);
		    }
		    break;
                    case 225: /* reduce ATerminal$LexerNamedContext */
		    {
			ArrayList list = new225();
			push(goTo(62), list);
		    }
		    break;
                    case 226: /* reduce ANonTerminal$LexerNamedContext */
		    {
			ArrayList list = new226();
			push(goTo(62), list);
		    }
		    break;
                    case 227: /* reduce ATerminal$AdditionalUnit */
		    {
			ArrayList list = new227();
			push(goTo(63), list);
		    }
		    break;
                    case 228: /* reduce ANonTerminal$AdditionalUnit */
		    {
			ArrayList list = new228();
			push(goTo(63), list);
		    }
		    break;
                    case 229: /* reduce ATerminal$Investigator */
		    {
			ArrayList list = new229();
			push(goTo(64), list);
		    }
		    break;
                    case 230: /* reduce ANonTerminal$Investigator */
		    {
			ArrayList list = new230();
			push(goTo(64), list);
		    }
		    break;
                    case 231: /* reduce ATerminal$Selector */
		    {
			ArrayList list = new231();
			push(goTo(65), list);
		    }
		    break;
                    case 232: /* reduce ANonTerminal$Selector */
		    {
			ArrayList list = new232();
			push(goTo(65), list);
		    }
		    break;
                    case 233: /* reduce ATerminal$AdditionalIdentifier */
		    {
			ArrayList list = new233();
			push(goTo(66), list);
		    }
		    break;
                    case 234: /* reduce ANonTerminal$AdditionalIdentifier */
		    {
			ArrayList list = new234();
			push(goTo(66), list);
		    }
		    break;
                    case 235: /* reduce ATerminal$ParserNamedContext */
		    {
			ArrayList list = new235();
			push(goTo(67), list);
		    }
		    break;
                    case 236: /* reduce ANonTerminal$ParserNamedContext */
		    {
			ArrayList list = new236();
			push(goTo(67), list);
		    }
		    break;
                    case 237: /* reduce ATerminal$ParserProduction */
		    {
			ArrayList list = new237();
			push(goTo(68), list);
		    }
		    break;
                    case 238: /* reduce ANonTerminal$ParserProduction */
		    {
			ArrayList list = new238();
			push(goTo(68), list);
		    }
		    break;
                    case 239: /* reduce ATerminal$AdditionalParserAlternative */
		    {
			ArrayList list = new239();
			push(goTo(69), list);
		    }
		    break;
                    case 240: /* reduce ANonTerminal$AdditionalParserAlternative */
		    {
			ArrayList list = new240();
			push(goTo(69), list);
		    }
		    break;
                    case 241: /* reduce ATerminal$Element */
		    {
			ArrayList list = new241();
			push(goTo(70), list);
		    }
		    break;
                    case 242: /* reduce ANonTerminal$Element */
		    {
			ArrayList list = new242();
			push(goTo(70), list);
		    }
		    break;
                    case 243: /* reduce ATerminal$ParserPriority */
		    {
			ArrayList list = new243();
			push(goTo(71), list);
		    }
		    break;
                    case 244: /* reduce ANonTerminal$ParserPriority */
		    {
			ArrayList list = new244();
			push(goTo(71), list);
		    }
		    break;
                    case 245: /* reduce ATerminal$ProductionTransformation */
		    {
			ArrayList list = new245();
			push(goTo(72), list);
		    }
		    break;
                    case 246: /* reduce ANonTerminal$ProductionTransformation */
		    {
			ArrayList list = new246();
			push(goTo(72), list);
		    }
		    break;
                    case 247: /* reduce ATerminal$AlternativeTransformation */
		    {
			ArrayList list = new247();
			push(goTo(73), list);
		    }
		    break;
                    case 248: /* reduce ANonTerminal$AlternativeTransformation */
		    {
			ArrayList list = new248();
			push(goTo(73), list);
		    }
		    break;
                    case 249: /* reduce ATerminal$TransformationElement */
		    {
			ArrayList list = new249();
			push(goTo(74), list);
		    }
		    break;
                    case 250: /* reduce ANonTerminal$TransformationElement */
		    {
			ArrayList list = new250();
			push(goTo(74), list);
		    }
		    break;
                    case 251: /* reduce ATerminal$ListElement */
		    {
			ArrayList list = new251();
			push(goTo(75), list);
		    }
		    break;
                    case 252: /* reduce ANonTerminal$ListElement */
		    {
			ArrayList list = new252();
			push(goTo(75), list);
		    }
		    break;
                    case 253: /* reduce ATerminal$TreeProduction */
		    {
			ArrayList list = new253();
			push(goTo(76), list);
		    }
		    break;
                    case 254: /* reduce ANonTerminal$TreeProduction */
		    {
			ArrayList list = new254();
			push(goTo(76), list);
		    }
		    break;
                    case 255: /* reduce ATerminal$AdditionalTreeAlternative */
		    {
			ArrayList list = new255();
			push(goTo(77), list);
		    }
		    break;
                    case 256: /* reduce ANonTerminal$AdditionalTreeAlternative */
		    {
			ArrayList list = new256();
			push(goTo(77), list);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PGrammar node1 = (PGrammar) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }



    @SuppressWarnings("unchecked")
    ArrayList new0() /* reduce AAgrammar1Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, null, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new1() /* reduce AAgrammar2Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, null, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new2() /* reduce AAgrammar3Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, pparserNode5, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new3() /* reduce AAgrammar4Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);
        pparserNode5 = (PParser)nodeArrayList5.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new4() /* reduce AAgrammar5Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, null, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new5() /* reduce AAgrammar6Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList5.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, null, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new6() /* reduce AAgrammar7Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList4.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList5.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, pparserNode5, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new7() /* reduce AAgrammar8Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);
        pparserNode5 = (PParser)nodeArrayList5.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList6.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new8() /* reduce AAgrammar9Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        ptreeNode7 = (PTree)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, null, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new9() /* reduce AAgrammar10Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);
        ptreeNode7 = (PTree)nodeArrayList5.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, null, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new10() /* reduce AAgrammar11Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList4.get(0);
        ptreeNode7 = (PTree)nodeArrayList5.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, pparserNode5, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new11() /* reduce AAgrammar12Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);
        pparserNode5 = (PParser)nodeArrayList5.get(0);
        ptreeNode7 = (PTree)nodeArrayList6.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new12() /* reduce AAgrammar13Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList4.get(0);
        ptreeNode7 = (PTree)nodeArrayList5.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, null, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new13() /* reduce AAgrammar14Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList5.get(0);
        ptreeNode7 = (PTree)nodeArrayList6.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, null, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new14() /* reduce AAgrammar15Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList4.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList5.get(0);
        ptreeNode7 = (PTree)nodeArrayList6.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, pparserNode5, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new15() /* reduce AAgrammar16Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);
        pparserNode5 = (PParser)nodeArrayList5.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList6.get(0);
        ptreeNode7 = (PTree)nodeArrayList7.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new16() /* reduce AAgrammar17Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, null, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new17() /* reduce AAgrammar18Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, null, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new18() /* reduce AAgrammar19Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, pparserNode5, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new19() /* reduce AAgrammar20Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);
        pparserNode5 = (PParser)nodeArrayList5.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, null, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new20() /* reduce AAgrammar21Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, null, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new21() /* reduce AAgrammar22Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList5.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, null, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new22() /* reduce AAgrammar23Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList4.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList5.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, pparserNode5, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new23() /* reduce AAgrammar24Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        @SuppressWarnings("unused") Object nullNode7 = null;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);
        pparserNode5 = (PParser)nodeArrayList5.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList6.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, ptransformationNode6, null);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new24() /* reduce AAgrammar25Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        ptreeNode7 = (PTree)nodeArrayList4.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, null, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new25() /* reduce AAgrammar26Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);
        ptreeNode7 = (PTree)nodeArrayList5.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, null, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new26() /* reduce AAgrammar27Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList4.get(0);
        ptreeNode7 = (PTree)nodeArrayList5.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, pparserNode5, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new27() /* reduce AAgrammar28Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);
        pparserNode5 = (PParser)nodeArrayList5.get(0);
        ptreeNode7 = (PTree)nodeArrayList6.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, null, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new28() /* reduce AAgrammar29Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList4.get(0);
        ptreeNode7 = (PTree)nodeArrayList5.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, null, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new29() /* reduce AAgrammar30Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList5.get(0);
        ptreeNode7 = (PTree)nodeArrayList6.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, null, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new30() /* reduce AAgrammar31Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        pparserNode5 = (PParser)nodeArrayList4.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList5.get(0);
        ptreeNode7 = (PTree)nodeArrayList6.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, null, pparserNode5, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new31() /* reduce AAgrammar32Grammar */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PGrammar pgrammarNode1;
        {
            // Block
        TGrammarKeyword tgrammarkeywordNode2;
        TIdentifier tidentifierNode3;
        PLexer plexerNode4;
        PParser pparserNode5;
        PTransformation ptransformationNode6;
        PTree ptreeNode7;
        tgrammarkeywordNode2 = (TGrammarKeyword)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        plexerNode4 = (PLexer)nodeArrayList4.get(0);
        pparserNode5 = (PParser)nodeArrayList5.get(0);
        ptransformationNode6 = (PTransformation)nodeArrayList6.get(0);
        ptreeNode7 = (PTree)nodeArrayList7.get(0);

        pgrammarNode1 = new AGrammar(tgrammarkeywordNode2, tidentifierNode3, plexerNode4, pparserNode5, ptransformationNode6, ptreeNode7);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new32() /* reduce AAlexer1Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode3, listNode5, listNode6, listNode7, listNode8);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new33() /* reduce AAlexer2Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode4, listNode6, listNode7, listNode8, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new34() /* reduce AAlexer3Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode3, listNode5, listNode7, listNode8, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new35() /* reduce AAlexer4Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode4, listNode6, listNode8, listNode9, listNode10);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new36() /* reduce AAlexer5Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList3.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode3, listNode5, listNode6, listNode8, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new37() /* reduce AAlexer6Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList4.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode4, listNode6, listNode7, listNode9, listNode10);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new38() /* reduce AAlexer7Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList4.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode3, listNode5, listNode7, listNode9, listNode10);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new39() /* reduce AAlexer8Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        LinkedList listNode11 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList5.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }
        {
            // Block
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode4, listNode6, listNode8, listNode10, listNode11);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new40() /* reduce AAlexer9Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList3.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode3, listNode5, listNode6, listNode7, listNode9);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new41() /* reduce AAlexer10Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList4.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode4, listNode6, listNode7, listNode8, listNode10);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new42() /* reduce AAlexer11Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList4.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode3, listNode5, listNode7, listNode8, listNode10);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new43() /* reduce AAlexer12Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        LinkedList listNode11 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode10 = new LinkedList();
        listNode10 = (LinkedList)nodeArrayList5.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode4, listNode6, listNode8, listNode9, listNode11);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new44() /* reduce AAlexer13Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList3.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList4.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode3, listNode5, listNode6, listNode8, listNode10);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new45() /* reduce AAlexer14Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        LinkedList listNode11 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList4.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        {
            // Block
        LinkedList listNode10 = new LinkedList();
        listNode10 = (LinkedList)nodeArrayList5.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode4, listNode6, listNode7, listNode9, listNode11);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new46() /* reduce AAlexer15Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        LinkedList listNode11 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList4.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        {
            // Block
        LinkedList listNode10 = new LinkedList();
        listNode10 = (LinkedList)nodeArrayList5.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode3, listNode5, listNode7, listNode9, listNode11);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new47() /* reduce AAlexer16Lexer */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexer plexerNode1;
        {
            // Block
        TLexerKeyword tlexerkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        LinkedList listNode12 = new LinkedList();
        tlexerkeywordNode2 = (TLexerKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList5.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }
        {
            // Block
        LinkedList listNode11 = new LinkedList();
        listNode11 = (LinkedList)nodeArrayList6.get(0);
	if(listNode11 != null)
	{
	  listNode12.addAll(listNode11);
	}
        }

        plexerNode1 = new ALexer(tlexerkeywordNode2, listNode4, listNode6, listNode8, listNode10, listNode12);
        }
	nodeList.add(plexerNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new48() /* reduce ANamedExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PNamedExpression pnamedexpressionNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TAssign tassignNode3;
        PExpression pexpressionNode4;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tassignNode3 = (TAssign)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pnamedexpressionNode1 = new ANamedExpression(tidentifierNode2, tassignNode3, pexpressionNode4);
        }
	nodeList.add(pnamedexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new49() /* reduce ASimpleExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        pexpressionNode1 = (PExpression)nodeArrayList1.get(0);
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new50() /* reduce AOrExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TBar tbarNode3;
        PExpression pexpressionNode4;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tbarNode3 = (TBar)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pexpressionNode1 = new AOrExpression(pexpressionNode2, tbarNode3, pexpressionNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new51() /* reduce ASimpleTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        pexpressionNode1 = (PExpression)nodeArrayList1.get(0);
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new52() /* reduce AAlooktopexpression1TopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        PLookback plookbackNode3;
        PLookahead plookaheadNode7;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        {
            // Block
        TLookbackKeyword tlookbackkeywordNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PExpression pexpressionNode6;
        tlookbackkeywordNode4 = (TLookbackKeyword)nodeArrayList2.get(0);
        pexpressionNode6 = (PExpression)nodeArrayList3.get(0);

        plookbackNode3 = new ALookback(tlookbackkeywordNode4, null, pexpressionNode6);
        }
        {
            // Block
        TLookaheadKeyword tlookaheadkeywordNode8;
        @SuppressWarnings("unused") Object nullNode9 = null;
        PExpression pexpressionNode10;
        tlookaheadkeywordNode8 = (TLookaheadKeyword)nodeArrayList4.get(0);
        pexpressionNode10 = (PExpression)nodeArrayList5.get(0);

        plookaheadNode7 = new ALookahead(tlookaheadkeywordNode8, null, pexpressionNode10);
        }

        pexpressionNode1 = new ALookExpression(pexpressionNode2, plookbackNode3, plookaheadNode7);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new53() /* reduce AAlooktopexpression2TopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        PLookback plookbackNode3;
        PLookahead plookaheadNode7;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        {
            // Block
        TLookbackKeyword tlookbackkeywordNode4;
        TNotKeyword tnotkeywordNode5;
        PExpression pexpressionNode6;
        tlookbackkeywordNode4 = (TLookbackKeyword)nodeArrayList2.get(0);
        tnotkeywordNode5 = (TNotKeyword)nodeArrayList3.get(0);
        pexpressionNode6 = (PExpression)nodeArrayList4.get(0);

        plookbackNode3 = new ALookback(tlookbackkeywordNode4, tnotkeywordNode5, pexpressionNode6);
        }
        {
            // Block
        TLookaheadKeyword tlookaheadkeywordNode8;
        @SuppressWarnings("unused") Object nullNode9 = null;
        PExpression pexpressionNode10;
        tlookaheadkeywordNode8 = (TLookaheadKeyword)nodeArrayList5.get(0);
        pexpressionNode10 = (PExpression)nodeArrayList6.get(0);

        plookaheadNode7 = new ALookahead(tlookaheadkeywordNode8, null, pexpressionNode10);
        }

        pexpressionNode1 = new ALookExpression(pexpressionNode2, plookbackNode3, plookaheadNode7);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new54() /* reduce AAlooktopexpression3TopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        PLookback plookbackNode3;
        PLookahead plookaheadNode7;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        {
            // Block
        TLookbackKeyword tlookbackkeywordNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PExpression pexpressionNode6;
        tlookbackkeywordNode4 = (TLookbackKeyword)nodeArrayList2.get(0);
        pexpressionNode6 = (PExpression)nodeArrayList3.get(0);

        plookbackNode3 = new ALookback(tlookbackkeywordNode4, null, pexpressionNode6);
        }
        {
            // Block
        TLookaheadKeyword tlookaheadkeywordNode8;
        TNotKeyword tnotkeywordNode9;
        PExpression pexpressionNode10;
        tlookaheadkeywordNode8 = (TLookaheadKeyword)nodeArrayList4.get(0);
        tnotkeywordNode9 = (TNotKeyword)nodeArrayList5.get(0);
        pexpressionNode10 = (PExpression)nodeArrayList6.get(0);

        plookaheadNode7 = new ALookahead(tlookaheadkeywordNode8, tnotkeywordNode9, pexpressionNode10);
        }

        pexpressionNode1 = new ALookExpression(pexpressionNode2, plookbackNode3, plookaheadNode7);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new55() /* reduce AAlooktopexpression4TopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        PLookback plookbackNode3;
        PLookahead plookaheadNode7;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        {
            // Block
        TLookbackKeyword tlookbackkeywordNode4;
        TNotKeyword tnotkeywordNode5;
        PExpression pexpressionNode6;
        tlookbackkeywordNode4 = (TLookbackKeyword)nodeArrayList2.get(0);
        tnotkeywordNode5 = (TNotKeyword)nodeArrayList3.get(0);
        pexpressionNode6 = (PExpression)nodeArrayList4.get(0);

        plookbackNode3 = new ALookback(tlookbackkeywordNode4, tnotkeywordNode5, pexpressionNode6);
        }
        {
            // Block
        TLookaheadKeyword tlookaheadkeywordNode8;
        TNotKeyword tnotkeywordNode9;
        PExpression pexpressionNode10;
        tlookaheadkeywordNode8 = (TLookaheadKeyword)nodeArrayList5.get(0);
        tnotkeywordNode9 = (TNotKeyword)nodeArrayList6.get(0);
        pexpressionNode10 = (PExpression)nodeArrayList7.get(0);

        plookaheadNode7 = new ALookahead(tlookaheadkeywordNode8, tnotkeywordNode9, pexpressionNode10);
        }

        pexpressionNode1 = new ALookExpression(pexpressionNode2, plookbackNode3, plookaheadNode7);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new56() /* reduce AAlookbacktopexpression1TopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        PLookback plookbackNode3;
        @SuppressWarnings("unused") Object nullNode7 = null;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        {
            // Block
        TLookbackKeyword tlookbackkeywordNode4;
        @SuppressWarnings("unused") Object nullNode5 = null;
        PExpression pexpressionNode6;
        tlookbackkeywordNode4 = (TLookbackKeyword)nodeArrayList2.get(0);
        pexpressionNode6 = (PExpression)nodeArrayList3.get(0);

        plookbackNode3 = new ALookback(tlookbackkeywordNode4, null, pexpressionNode6);
        }

        pexpressionNode1 = new ALookExpression(pexpressionNode2, plookbackNode3, null);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new57() /* reduce AAlookbacktopexpression2TopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        PLookback plookbackNode3;
        @SuppressWarnings("unused") Object nullNode7 = null;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        {
            // Block
        TLookbackKeyword tlookbackkeywordNode4;
        TNotKeyword tnotkeywordNode5;
        PExpression pexpressionNode6;
        tlookbackkeywordNode4 = (TLookbackKeyword)nodeArrayList2.get(0);
        tnotkeywordNode5 = (TNotKeyword)nodeArrayList3.get(0);
        pexpressionNode6 = (PExpression)nodeArrayList4.get(0);

        plookbackNode3 = new ALookback(tlookbackkeywordNode4, tnotkeywordNode5, pexpressionNode6);
        }

        pexpressionNode1 = new ALookExpression(pexpressionNode2, plookbackNode3, null);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new58() /* reduce AAlookaheadtopexpression1TopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PLookahead plookaheadNode4;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        {
            // Block
        TLookaheadKeyword tlookaheadkeywordNode5;
        @SuppressWarnings("unused") Object nullNode6 = null;
        PExpression pexpressionNode7;
        tlookaheadkeywordNode5 = (TLookaheadKeyword)nodeArrayList2.get(0);
        pexpressionNode7 = (PExpression)nodeArrayList3.get(0);

        plookaheadNode4 = new ALookahead(tlookaheadkeywordNode5, null, pexpressionNode7);
        }

        pexpressionNode1 = new ALookExpression(pexpressionNode2, null, plookaheadNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new59() /* reduce AAlookaheadtopexpression2TopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PLookahead plookaheadNode4;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        {
            // Block
        TLookaheadKeyword tlookaheadkeywordNode5;
        TNotKeyword tnotkeywordNode6;
        PExpression pexpressionNode7;
        tlookaheadkeywordNode5 = (TLookaheadKeyword)nodeArrayList2.get(0);
        tnotkeywordNode6 = (TNotKeyword)nodeArrayList3.get(0);
        pexpressionNode7 = (PExpression)nodeArrayList4.get(0);

        plookaheadNode4 = new ALookahead(tlookaheadkeywordNode5, tnotkeywordNode6, pexpressionNode7);
        }

        pexpressionNode1 = new ALookExpression(pexpressionNode2, null, plookaheadNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new60() /* reduce AShortestTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        TShortestKeyword tshortestkeywordNode2;
        PExpression pexpressionNode3;
        tshortestkeywordNode2 = (TShortestKeyword)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);

        pexpressionNode1 = new AShortestExpression(tshortestkeywordNode2, pexpressionNode3);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new61() /* reduce ALongestTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        TLongestKeyword tlongestkeywordNode2;
        PExpression pexpressionNode3;
        tlongestkeywordNode2 = (TLongestKeyword)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);

        pexpressionNode1 = new ALongestExpression(tlongestkeywordNode2, pexpressionNode3);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new62() /* reduce ASubtractionTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TMinus tminusNode3;
        PExpression pexpressionNode4;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tminusNode3 = (TMinus)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pexpressionNode1 = new ASubtractionExpression(pexpressionNode2, tminusNode3, pexpressionNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new63() /* reduce AExceptTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TExceptKeyword texceptkeywordNode3;
        PExpression pexpressionNode4;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        texceptkeywordNode3 = (TExceptKeyword)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pexpressionNode1 = new AExceptExpression(pexpressionNode2, texceptkeywordNode3, pexpressionNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new64() /* reduce AIntersectionTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        pexpressionNode1 = (PExpression)nodeArrayList1.get(0);
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new65() /* reduce AIntervalTopExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PCharacter pcharacterNode2;
        TTwoDots ttwodotsNode3;
        PCharacter pcharacterNode4;
        pcharacterNode2 = (PCharacter)nodeArrayList1.get(0);
        ttwodotsNode3 = (TTwoDots)nodeArrayList2.get(0);
        pcharacterNode4 = (PCharacter)nodeArrayList3.get(0);

        pexpressionNode1 = new AIntervalExpression(pcharacterNode2, ttwodotsNode3, pcharacterNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new66() /* reduce ANormalAndExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TAndKeyword tandkeywordNode3;
        PExpression pexpressionNode4;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tandkeywordNode3 = (TAndKeyword)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pexpressionNode1 = new AIntersectionExpression(pexpressionNode2, tandkeywordNode3, pexpressionNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new67() /* reduce ARecursiveAndExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TAndKeyword tandkeywordNode3;
        PExpression pexpressionNode4;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        tandkeywordNode3 = (TAndKeyword)nodeArrayList2.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList3.get(0);

        pexpressionNode1 = new AIntersectionExpression(pexpressionNode2, tandkeywordNode3, pexpressionNode4);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new68() /* reduce ASimpleConcatenation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        pexpressionNode1 = (PExpression)nodeArrayList1.get(0);
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new69() /* reduce ARecursiveConcatenation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        PExpression pexpressionNode3;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        pexpressionNode3 = (PExpression)nodeArrayList2.get(0);

        pexpressionNode1 = new AConcatenationExpression(pexpressionNode2, pexpressionNode3);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new70() /* reduce ASimpleUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        pexpressionNode1 = (PExpression)nodeArrayList1.get(0);
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new71() /* reduce AUnaryOperatorUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        PUnaryOperator punaryoperatorNode3;
        pexpressionNode2 = (PExpression)nodeArrayList1.get(0);
        punaryoperatorNode3 = (PUnaryOperator)nodeArrayList2.get(0);

        pexpressionNode1 = new AUnaryOperatorExpression(pexpressionNode2, punaryoperatorNode3);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new72() /* reduce ASeparatedUnaryExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PExpression pexpressionNode2;
        TSeparatorKeyword tseparatorkeywordNode3;
        PExpression pexpressionNode4;
        PManyOperator pmanyoperatorNode5;
        pexpressionNode2 = (PExpression)nodeArrayList2.get(0);
        tseparatorkeywordNode3 = (TSeparatorKeyword)nodeArrayList3.get(0);
        pexpressionNode4 = (PExpression)nodeArrayList4.get(0);
        pmanyoperatorNode5 = (PManyOperator)nodeArrayList6.get(0);

        pexpressionNode1 = new ASeparatedExpression(pexpressionNode2, tseparatorkeywordNode3, pexpressionNode4, pmanyoperatorNode5);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new73() /* reduce AUnitTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        PUnit punitNode2;
        punitNode2 = (PUnit)nodeArrayList1.get(0);

        pexpressionNode1 = new AUnitExpression(punitNode2);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new74() /* reduce AEpsilonTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        TEpsilon tepsilonNode2;
        tepsilonNode2 = (TEpsilon)nodeArrayList1.get(0);

        pexpressionNode1 = new AEpsilonExpression(tepsilonNode2);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new75() /* reduce AAnyTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        {
            // Block
        TAnyKeyword tanykeywordNode2;
        tanykeywordNode2 = (TAnyKeyword)nodeArrayList1.get(0);

        pexpressionNode1 = new AAnyExpression(tanykeywordNode2);
        }
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new76() /* reduce AParTerm */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PExpression pexpressionNode1;
        pexpressionNode1 = (PExpression)nodeArrayList2.get(0);
	nodeList.add(pexpressionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new77() /* reduce ANameUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnit punitNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        punitNode1 = new ANameUnit(tidentifierNode2);
        }
	nodeList.add(punitNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new78() /* reduce AStringUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnit punitNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        punitNode1 = new AStringUnit(tstringNode2);
        }
	nodeList.add(punitNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new79() /* reduce ACharacterUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnit punitNode1;
        {
            // Block
        PCharacter pcharacterNode2;
        pcharacterNode2 = (PCharacter)nodeArrayList1.get(0);

        punitNode1 = new ACharacterUnit(pcharacterNode2);
        }
	nodeList.add(punitNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new80() /* reduce AStartUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnit punitNode1;
        {
            // Block
        TStartKeyword tstartkeywordNode2;
        tstartkeywordNode2 = (TStartKeyword)nodeArrayList1.get(0);

        punitNode1 = new AStartUnit(tstartkeywordNode2);
        }
	nodeList.add(punitNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new81() /* reduce AEndUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnit punitNode1;
        {
            // Block
        TEndKeyword tendkeywordNode2;
        tendkeywordNode2 = (TEndKeyword)nodeArrayList1.get(0);

        punitNode1 = new AEndUnit(tendkeywordNode2);
        }
	nodeList.add(punitNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new82() /* reduce ACharCharacter */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharacter pcharacterNode1;
        {
            // Block
        TChar tcharNode2;
        tcharNode2 = (TChar)nodeArrayList1.get(0);

        pcharacterNode1 = new ACharCharacter(tcharNode2);
        }
	nodeList.add(pcharacterNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new83() /* reduce ADecCharacter */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharacter pcharacterNode1;
        {
            // Block
        TDecChar tdeccharNode2;
        tdeccharNode2 = (TDecChar)nodeArrayList1.get(0);

        pcharacterNode1 = new ADecCharacter(tdeccharNode2);
        }
	nodeList.add(pcharacterNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new84() /* reduce AHexCharacter */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PCharacter pcharacterNode1;
        {
            // Block
        THexChar thexcharNode2;
        thexcharNode2 = (THexChar)nodeArrayList1.get(0);

        pcharacterNode1 = new AHexCharacter(thexcharNode2);
        }
	nodeList.add(pcharacterNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new85() /* reduce AZeroOrOneUnaryOperator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnaryOperator punaryoperatorNode1;
        {
            // Block
        TQMark tqmarkNode2;
        tqmarkNode2 = (TQMark)nodeArrayList1.get(0);

        punaryoperatorNode1 = new AZeroOrOneUnaryOperator(tqmarkNode2);
        }
	nodeList.add(punaryoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new86() /* reduce AManyUnaryOperator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnaryOperator punaryoperatorNode1;
        {
            // Block
        PManyOperator pmanyoperatorNode2;
        pmanyoperatorNode2 = (PManyOperator)nodeArrayList1.get(0);

        punaryoperatorNode1 = new AManyUnaryOperator(pmanyoperatorNode2);
        }
	nodeList.add(punaryoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new87() /* reduce AZeroOrMoreManyOperator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PManyOperator pmanyoperatorNode1;
        {
            // Block
        TStar tstarNode2;
        tstarNode2 = (TStar)nodeArrayList1.get(0);

        pmanyoperatorNode1 = new AZeroOrMoreManyOperator(tstarNode2);
        }
	nodeList.add(pmanyoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new88() /* reduce AOneOrMoreManyOperator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PManyOperator pmanyoperatorNode1;
        {
            // Block
        TPlus tplusNode2;
        tplusNode2 = (TPlus)nodeArrayList1.get(0);

        pmanyoperatorNode1 = new AOneOrMoreManyOperator(tplusNode2);
        }
	nodeList.add(pmanyoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new89() /* reduce ANumberManyOperator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PManyOperator pmanyoperatorNode1;
        {
            // Block
        TCaret tcaretNode2;
        TNumber tnumberNode3;
        tcaretNode2 = (TCaret)nodeArrayList1.get(0);
        tnumberNode3 = (TNumber)nodeArrayList2.get(0);

        pmanyoperatorNode1 = new ANumberManyOperator(tcaretNode2, tnumberNode3);
        }
	nodeList.add(pmanyoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new90() /* reduce AIntervalManyOperator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PManyOperator pmanyoperatorNode1;
        {
            // Block
        TCaret tcaretNode2;
        TLPar tlparNode3;
        TNumber tnumberNode4;
        TTwoDots ttwodotsNode5;
        TNumber tnumberNode6;
        TRPar trparNode7;
        tcaretNode2 = (TCaret)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        tnumberNode4 = (TNumber)nodeArrayList3.get(0);
        ttwodotsNode5 = (TTwoDots)nodeArrayList4.get(0);
        tnumberNode6 = (TNumber)nodeArrayList5.get(0);
        trparNode7 = (TRPar)nodeArrayList6.get(0);

        pmanyoperatorNode1 = new AIntervalManyOperator(tcaretNode2, tlparNode3, tnumberNode4, ttwodotsNode5, tnumberNode6, trparNode7);
        }
	nodeList.add(pmanyoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new91() /* reduce AAtLeastManyOperator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PManyOperator pmanyoperatorNode1;
        {
            // Block
        TCaret tcaretNode2;
        TLPar tlparNode3;
        TNumber tnumberNode4;
        TThreeDots tthreedotsNode5;
        TRPar trparNode6;
        tcaretNode2 = (TCaret)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        tnumberNode4 = (TNumber)nodeArrayList3.get(0);
        tthreedotsNode5 = (TThreeDots)nodeArrayList4.get(0);
        trparNode6 = (TRPar)nodeArrayList5.get(0);

        pmanyoperatorNode1 = new AAtLeastManyOperator(tcaretNode2, tlparNode3, tnumberNode4, tthreedotsNode5, trparNode6);
        }
	nodeList.add(pmanyoperatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new92() /* reduce AAlexerpriorities1LexerPriorities */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new93() /* reduce AAlexerpriorities2LexerPriorities */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new94() /* reduce ALexerPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerPriority plexerpriorityNode1;
        {
            // Block
        PUnit punitNode2;
        TGt tgtNode3;
        PUnit punitNode4;
        punitNode2 = (PUnit)nodeArrayList1.get(0);
        tgtNode3 = (TGt)nodeArrayList2.get(0);
        punitNode4 = (PUnit)nodeArrayList3.get(0);

        plexerpriorityNode1 = new ALexerPriority(punitNode2, tgtNode3, punitNode4);
        }
	nodeList.add(plexerpriorityNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new95() /* reduce AAlexercontexts1LexerContexts */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PLexerContext plexercontextNode1;
        plexercontextNode1 = (PLexerContext)nodeArrayList1.get(0);
	if(plexercontextNode1 != null)
	{
	  listNode2.add(plexercontextNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new96() /* reduce AAlexercontexts2LexerContexts */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PLexerContext plexercontextNode1;
        LinkedList listNode2 = new LinkedList();
        plexercontextNode1 = (PLexerContext)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(plexercontextNode1 != null)
	{
	  listNode3.add(plexercontextNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new97() /* reduce ALexerDefaultContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerContext plexercontextNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PTokens ptokensNode3;
        PIgnored pignoredNode4;
        ptokensNode3 = (PTokens)nodeArrayList1.get(0);
        pignoredNode4 = (PIgnored)nodeArrayList1.get(1);

        plexercontextNode1 = new ALexerContext(null, ptokensNode3, pignoredNode4);
        }
	nodeList.add(plexercontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new98() /* reduce ALexerNamedContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PLexerContext plexercontextNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        PTokens ptokensNode3;
        PIgnored pignoredNode4;
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        ptokensNode3 = (PTokens)nodeArrayList4.get(0);
        pignoredNode4 = (PIgnored)nodeArrayList4.get(1);

        plexercontextNode1 = new ALexerContext(tidentifierNode2, ptokensNode3, pignoredNode4);
        }
	nodeList.add(plexercontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new99() /* reduce AAlexercontextbody1LexerContextBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") Object nullNode1 = null;
        @SuppressWarnings("unused") Object nullNode2 = null;
	nodeList.add(nullNode1);
	nodeList.add(nullNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new100() /* reduce AAlexercontextbody2LexerContextBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTokens ptokensNode1;
        @SuppressWarnings("unused") Object nullNode2 = null;
        ptokensNode1 = (PTokens)nodeArrayList1.get(0);
	nodeList.add(ptokensNode1);
	nodeList.add(nullNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new101() /* reduce AAlexercontextbody3LexerContextBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        @SuppressWarnings("unused") Object nullNode1 = null;
        PIgnored pignoredNode2;
        pignoredNode2 = (PIgnored)nodeArrayList1.get(0);
	nodeList.add(nullNode1);
	nodeList.add(pignoredNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new102() /* reduce AAlexercontextbody4LexerContextBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTokens ptokensNode1;
        PIgnored pignoredNode2;
        ptokensNode1 = (PTokens)nodeArrayList1.get(0);
        pignoredNode2 = (PIgnored)nodeArrayList2.get(0);
	nodeList.add(ptokensNode1);
	nodeList.add(pignoredNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new103() /* reduce AAtokens1Tokens */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTokens ptokensNode1;
        {
            // Block
        TTokenKeyword ttokenkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        ttokenkeywordNode2 = (TTokenKeyword)nodeArrayList1.get(0);
        {
            // Block
        }

        ptokensNode1 = new ATokens(ttokenkeywordNode2, listNode3);
        }
	nodeList.add(ptokensNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new104() /* reduce AAtokens2Tokens */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTokens ptokensNode1;
        {
            // Block
        TTokenKeyword ttokenkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        ttokenkeywordNode2 = (TTokenKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        ptokensNode1 = new ATokens(ttokenkeywordNode2, listNode4);
        }
	nodeList.add(ptokensNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new105() /* reduce AAtokensbody1TokensBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new106() /* reduce AAtokensbody2TokensBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList1.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new107() /* reduce AAignored1Ignored */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PIgnored pignoredNode1;
        {
            // Block
        TIgnoredKeyword tignoredkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        tignoredkeywordNode2 = (TIgnoredKeyword)nodeArrayList1.get(0);
        {
            // Block
        }

        pignoredNode1 = new AIgnored(tignoredkeywordNode2, listNode3);
        }
	nodeList.add(pignoredNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new108() /* reduce AAignored2Ignored */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PIgnored pignoredNode1;
        {
            // Block
        TIgnoredKeyword tignoredkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        tignoredkeywordNode2 = (TIgnoredKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pignoredNode1 = new AIgnored(tignoredkeywordNode2, listNode4);
        }
	nodeList.add(pignoredNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new109() /* reduce AAignoredbody1IgnoredBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new110() /* reduce AAignoredbody2IgnoredBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList1.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new111() /* reduce AAunitlist1UnitList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PUnit punitNode1;
        punitNode1 = (PUnit)nodeArrayList1.get(0);
	if(punitNode1 != null)
	{
	  listNode2.add(punitNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new112() /* reduce AAunitlist2UnitList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PUnit punitNode1;
        LinkedList listNode2 = new LinkedList();
        punitNode1 = (PUnit)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(punitNode1 != null)
	{
	  listNode3.add(punitNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new113() /* reduce AAunitlist3UnitList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PUnit punitNode1;
        punitNode1 = (PUnit)nodeArrayList1.get(0);
	if(punitNode1 != null)
	{
	  listNode2.add(punitNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new114() /* reduce AAunitlist4UnitList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PUnit punitNode1;
        LinkedList listNode2 = new LinkedList();
        punitNode1 = (PUnit)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(punitNode1 != null)
	{
	  listNode3.add(punitNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new115() /* reduce AAdditionalUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PUnit punitNode1;
        punitNode1 = (PUnit)nodeArrayList2.get(0);
	nodeList.add(punitNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new116() /* reduce AAinvestigators1Investigators */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new117() /* reduce AAinvestigators2Investigators */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new118() /* reduce AInvestigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PInvestigator pinvestigatorNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TIdentifier tidentifierNode3;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList3.get(0);

        pinvestigatorNode1 = new AInvestigator(tidentifierNode2, tidentifierNode3);
        }
	nodeList.add(pinvestigatorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new119() /* reduce AAselectors1Selectors */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new120() /* reduce AAselectors2Selectors */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new121() /* reduce ASelectionSelector */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PSelector pselectorNode1;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        TAssign tassignNode4;
        TIdentifier tidentifierNode5;
        TIdentifier tidentifierNode6;
        {
            // Block
        LinkedList listNode2 = new LinkedList();
        listNode2 = (LinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        tassignNode4 = (TAssign)nodeArrayList2.get(0);
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);
        tidentifierNode6 = (TIdentifier)nodeArrayList5.get(0);

        pselectorNode1 = new ASelector(listNode3, tassignNode4, tidentifierNode5, tidentifierNode6);
        }
	nodeList.add(pselectorNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new122() /* reduce ASelection */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        LinkedList listNode2 = new LinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList2.get(0);
        listNode2 = (LinkedList)nodeArrayList3.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode3.add(tidentifierNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new123() /* reduce AAparser1Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        }

        pparserNode1 = new AParser(tparserkeywordNode2, null, listNode5, listNode6, listNode7);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new124() /* reduce AAparser2$Aroot11Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        PRoot prootNode3;
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        {
            // Block
        TRootKeyword trootkeywordNode4;
        LinkedList listNode5 = new LinkedList();
        trootkeywordNode4 = (TRootKeyword)nodeArrayList2.get(0);
        {
            // Block
        }

        prootNode3 = new ARoot(trootkeywordNode4, listNode5);
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }
        {
            // Block
        }

        pparserNode1 = new AParser(tparserkeywordNode2, prootNode3, listNode7, listNode8, listNode9);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new125() /* reduce AAparser2$Aroot21Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        PRoot prootNode3;
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        {
            // Block
        TRootKeyword trootkeywordNode4;
        LinkedList listNode6 = new LinkedList();
        trootkeywordNode4 = (TRootKeyword)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        prootNode3 = new ARoot(trootkeywordNode4, listNode6);
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        }
        {
            // Block
        }

        pparserNode1 = new AParser(tparserkeywordNode2, prootNode3, listNode8, listNode9, listNode10);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new126() /* reduce AAparser3Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }

        pparserNode1 = new AParser(tparserkeywordNode2, null, listNode5, listNode7, listNode8);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new127() /* reduce AAparser4$Aroot11Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        PRoot prootNode3;
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        {
            // Block
        TRootKeyword trootkeywordNode4;
        LinkedList listNode5 = new LinkedList();
        trootkeywordNode4 = (TRootKeyword)nodeArrayList2.get(0);
        {
            // Block
        }

        prootNode3 = new ARoot(trootkeywordNode4, listNode5);
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList4.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        {
            // Block
        }

        pparserNode1 = new AParser(tparserkeywordNode2, prootNode3, listNode7, listNode9, listNode10);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new128() /* reduce AAparser4$Aroot21Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        PRoot prootNode3;
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        LinkedList listNode11 = new LinkedList();
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        {
            // Block
        TRootKeyword trootkeywordNode4;
        LinkedList listNode6 = new LinkedList();
        trootkeywordNode4 = (TRootKeyword)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        prootNode3 = new ARoot(trootkeywordNode4, listNode6);
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList5.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }
        {
            // Block
        }

        pparserNode1 = new AParser(tparserkeywordNode2, prootNode3, listNode8, listNode10, listNode11);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new129() /* reduce AAparser5Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList3.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pparserNode1 = new AParser(tparserkeywordNode2, null, listNode5, listNode6, listNode8);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new130() /* reduce AAparser6$Aroot11Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        PRoot prootNode3;
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        {
            // Block
        TRootKeyword trootkeywordNode4;
        LinkedList listNode5 = new LinkedList();
        trootkeywordNode4 = (TRootKeyword)nodeArrayList2.get(0);
        {
            // Block
        }

        prootNode3 = new ARoot(trootkeywordNode4, listNode5);
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList4.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }

        pparserNode1 = new AParser(tparserkeywordNode2, prootNode3, listNode7, listNode8, listNode10);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new131() /* reduce AAparser6$Aroot21Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        PRoot prootNode3;
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        LinkedList listNode11 = new LinkedList();
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        {
            // Block
        TRootKeyword trootkeywordNode4;
        LinkedList listNode6 = new LinkedList();
        trootkeywordNode4 = (TRootKeyword)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        prootNode3 = new ARoot(trootkeywordNode4, listNode6);
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        }
        {
            // Block
        LinkedList listNode10 = new LinkedList();
        listNode10 = (LinkedList)nodeArrayList5.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pparserNode1 = new AParser(tparserkeywordNode2, prootNode3, listNode8, listNode9, listNode11);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new132() /* reduce AAparser7Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        LinkedList listNode5 = new LinkedList();
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList4.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }

        pparserNode1 = new AParser(tparserkeywordNode2, null, listNode5, listNode7, listNode9);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new133() /* reduce AAparser8$Aroot11Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        PRoot prootNode3;
        LinkedList listNode7 = new LinkedList();
        LinkedList listNode9 = new LinkedList();
        LinkedList listNode11 = new LinkedList();
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        {
            // Block
        TRootKeyword trootkeywordNode4;
        LinkedList listNode5 = new LinkedList();
        trootkeywordNode4 = (TRootKeyword)nodeArrayList2.get(0);
        {
            // Block
        }

        prootNode3 = new ARoot(trootkeywordNode4, listNode5);
        }
        {
            // Block
        LinkedList listNode6 = new LinkedList();
        listNode6 = (LinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
            // Block
        LinkedList listNode8 = new LinkedList();
        listNode8 = (LinkedList)nodeArrayList4.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        {
            // Block
        LinkedList listNode10 = new LinkedList();
        listNode10 = (LinkedList)nodeArrayList5.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pparserNode1 = new AParser(tparserkeywordNode2, prootNode3, listNode7, listNode9, listNode11);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new134() /* reduce AAparser8$Aroot21Parser */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParser pparserNode1;
        {
            // Block
        TParserKeyword tparserkeywordNode2;
        PRoot prootNode3;
        LinkedList listNode8 = new LinkedList();
        LinkedList listNode10 = new LinkedList();
        LinkedList listNode12 = new LinkedList();
        tparserkeywordNode2 = (TParserKeyword)nodeArrayList1.get(0);
        {
            // Block
        TRootKeyword trootkeywordNode4;
        LinkedList listNode6 = new LinkedList();
        trootkeywordNode4 = (TRootKeyword)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        prootNode3 = new ARoot(trootkeywordNode4, listNode6);
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList4.get(0);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }
        {
            // Block
        LinkedList listNode9 = new LinkedList();
        listNode9 = (LinkedList)nodeArrayList5.get(0);
	if(listNode9 != null)
	{
	  listNode10.addAll(listNode9);
	}
        }
        {
            // Block
        LinkedList listNode11 = new LinkedList();
        listNode11 = (LinkedList)nodeArrayList6.get(0);
	if(listNode11 != null)
	{
	  listNode12.addAll(listNode11);
	}
        }

        pparserNode1 = new AParser(tparserkeywordNode2, prootNode3, listNode8, listNode10, listNode12);
        }
	nodeList.add(pparserNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new135() /* reduce AArootbody1RootBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new136() /* reduce AArootbody2RootBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList1.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new137() /* reduce AAidentifierlist1IdentifierList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode2.add(tidentifierNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new138() /* reduce AAidentifierlist2IdentifierList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        LinkedList listNode2 = new LinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode3.add(tidentifierNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new139() /* reduce AAidentifierlist3IdentifierList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode2.add(tidentifierNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new140() /* reduce AAidentifierlist4IdentifierList */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        LinkedList listNode2 = new LinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode3.add(tidentifierNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new141() /* reduce AAdditionalIdentifier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList2.get(0);
	nodeList.add(tidentifierNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new142() /* reduce AAparsercontexts1ParserContexts */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserContext pparsercontextNode1;
        pparsercontextNode1 = (PParserContext)nodeArrayList1.get(0);
	if(pparsercontextNode1 != null)
	{
	  listNode2.add(pparsercontextNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new143() /* reduce AAparsercontexts2ParserContexts */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PParserContext pparsercontextNode1;
        LinkedList listNode2 = new LinkedList();
        pparsercontextNode1 = (PParserContext)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(pparsercontextNode1 != null)
	{
	  listNode3.add(pparsercontextNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new144() /* reduce AAparserdefaultcontext1ParserDefaultContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        PParserContext pparsercontextNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        }

        pparsercontextNode1 = new AParserContext(null, listNode3);
        }
	nodeList.add(pparsercontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new145() /* reduce AAparserdefaultcontext2ParserDefaultContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserContext pparsercontextNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparsercontextNode1 = new AParserContext(null, listNode4);
        }
	nodeList.add(pparsercontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new146() /* reduce AAparsernamedcontext1ParserNamedContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserContext pparsercontextNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode3 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        {
            // Block
        }

        pparsercontextNode1 = new AParserContext(tidentifierNode2, listNode3);
        }
	nodeList.add(pparsercontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new147() /* reduce AAparsernamedcontext2ParserNamedContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserContext pparsercontextNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        LinkedList listNode4 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList4.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparsercontextNode1 = new AParserContext(tidentifierNode2, listNode4);
        }
	nodeList.add(pparsercontextNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new148() /* reduce AAparserproduction1ParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserProduction pparserproductionNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        TAssign tassignNode4;
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tassignNode4 = (TAssign)nodeArrayList1.get(1);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList1.get(2);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList1.get(3);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pparserproductionNode1 = new AParserProduction(null, tidentifierNode3, tassignNode4, listNode6, listNode8);
        }
	nodeList.add(pparserproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new149() /* reduce AAparserproduction2ParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserProduction pparserproductionNode1;
        {
            // Block
        PQualifier pqualifierNode2;
        TIdentifier tidentifierNode3;
        TAssign tassignNode4;
        LinkedList listNode6 = new LinkedList();
        LinkedList listNode8 = new LinkedList();
        pqualifierNode2 = (PQualifier)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tassignNode4 = (TAssign)nodeArrayList2.get(1);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList2.get(2);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        {
            // Block
        LinkedList listNode7 = new LinkedList();
        listNode7 = (LinkedList)nodeArrayList2.get(3);
	if(listNode7 != null)
	{
	  listNode8.addAll(listNode7);
	}
        }

        pparserproductionNode1 = new AParserProduction(pqualifierNode2, tidentifierNode3, tassignNode4, listNode6, listNode8);
        }
	nodeList.add(pparserproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new150() /* reduce ADanglingQualifier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PQualifier pqualifierNode1;
        {
            // Block
        TDanglingKeyword tdanglingkeywordNode2;
        tdanglingkeywordNode2 = (TDanglingKeyword)nodeArrayList1.get(0);

        pqualifierNode1 = new ADanglingQualifier(tdanglingkeywordNode2);
        }
	nodeList.add(pqualifierNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new151() /* reduce ATokenQualifier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PQualifier pqualifierNode1;
        {
            // Block
        TTokenKeyword ttokenkeywordNode2;
        ttokenkeywordNode2 = (TTokenKeyword)nodeArrayList1.get(0);

        pqualifierNode1 = new ATokenQualifier(ttokenkeywordNode2);
        }
	nodeList.add(pqualifierNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new152() /* reduce AAparserproductionbody1ParserProductionBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TIdentifier tidentifierNode1;
        TAssign tassignNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode5 = new LinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
        tassignNode2 = (TAssign)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
	nodeList.add(tidentifierNode1);
	nodeList.add(tassignNode2);
	nodeList.add(listNode4);
	nodeList.add(listNode5);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new153() /* reduce AAparserproductionbody2ParserProductionBody */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        TIdentifier tidentifierNode1;
        TAssign tassignNode2;
        LinkedList listNode4 = new LinkedList();
        LinkedList listNode6 = new LinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
        tassignNode2 = (TAssign)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList3.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList5.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
	nodeList.add(tidentifierNode1);
	nodeList.add(tassignNode2);
	nodeList.add(listNode4);
	nodeList.add(listNode6);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new154() /* reduce AAparseralternatives1ParserAlternatives */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserAlternative pparseralternativeNode1;
        pparseralternativeNode1 = (PParserAlternative)nodeArrayList1.get(0);
	if(pparseralternativeNode1 != null)
	{
	  listNode2.add(pparseralternativeNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new155() /* reduce AAparseralternatives2ParserAlternatives */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PParserAlternative pparseralternativeNode1;
        LinkedList listNode2 = new LinkedList();
        pparseralternativeNode1 = (PParserAlternative)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(pparseralternativeNode1 != null)
	{
	  listNode3.add(pparseralternativeNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new156() /* reduce AAdditionalParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        pparseralternativeNode1 = (PParserAlternative)nodeArrayList2.get(0);
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new157() /* reduce AAnormalparseralternative1ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode4 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode5 = null;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparseralternativeNode1 = new AParserAlternative(null, listNode4, null);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new158() /* reduce AAnormalparseralternative2ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        TAlternativeName talternativenameNode2;
        LinkedList listNode4 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode5 = null;
        talternativenameNode2 = (TAlternativeName)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparseralternativeNode1 = new AParserAlternative(talternativenameNode2, listNode4, null);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new159() /* reduce AAnormalparseralternative3ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode4 = new LinkedList();
        PDanglingElement pdanglingelementNode5;
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        pdanglingelementNode5 = (PDanglingElement)nodeArrayList2.get(0);

        pparseralternativeNode1 = new AParserAlternative(null, listNode4, pdanglingelementNode5);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new160() /* reduce AAnormalparseralternative4ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        TAlternativeName talternativenameNode2;
        LinkedList listNode4 = new LinkedList();
        PDanglingElement pdanglingelementNode5;
        talternativenameNode2 = (TAlternativeName)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        pdanglingelementNode5 = (PDanglingElement)nodeArrayList3.get(0);

        pparseralternativeNode1 = new AParserAlternative(talternativenameNode2, listNode4, pdanglingelementNode5);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new161() /* reduce AAemptyparseralternative1ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode3 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode4 = null;
        {
            // Block
        }

        pparseralternativeNode1 = new AParserAlternative(null, listNode3, null);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new162() /* reduce AAemptyparseralternative2ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        TAlternativeName talternativenameNode2;
        LinkedList listNode3 = new LinkedList();
        @SuppressWarnings("unused") Object nullNode4 = null;
        talternativenameNode2 = (TAlternativeName)nodeArrayList1.get(0);
        {
            // Block
        }

        pparseralternativeNode1 = new AParserAlternative(talternativenameNode2, listNode3, null);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new163() /* reduce AAemptyparseralternative3ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode3 = new LinkedList();
        PDanglingElement pdanglingelementNode4;
        {
            // Block
        }
        pdanglingelementNode4 = (PDanglingElement)nodeArrayList2.get(0);

        pparseralternativeNode1 = new AParserAlternative(null, listNode3, pdanglingelementNode4);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new164() /* reduce AAemptyparseralternative4ParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserAlternative pparseralternativeNode1;
        {
            // Block
        TAlternativeName talternativenameNode2;
        LinkedList listNode3 = new LinkedList();
        PDanglingElement pdanglingelementNode4;
        talternativenameNode2 = (TAlternativeName)nodeArrayList1.get(0);
        {
            // Block
        }
        pdanglingelementNode4 = (PDanglingElement)nodeArrayList3.get(0);

        pparseralternativeNode1 = new AParserAlternative(talternativenameNode2, listNode3, pdanglingelementNode4);
        }
	nodeList.add(pparseralternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new165() /* reduce AAnormalelement1Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PUnit punitNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        punitNode3 = (PUnit)nodeArrayList1.get(0);

        pelementNode1 = new ANormalElement(null, punitNode3, null);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new166() /* reduce AAnormalelement2Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        TElementName telementnameNode2;
        PUnit punitNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        telementnameNode2 = (TElementName)nodeArrayList1.get(0);
        punitNode3 = (PUnit)nodeArrayList2.get(0);

        pelementNode1 = new ANormalElement(telementnameNode2, punitNode3, null);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new167() /* reduce AAnormalelement3Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PUnit punitNode3;
        PUnaryOperator punaryoperatorNode4;
        punitNode3 = (PUnit)nodeArrayList1.get(0);
        punaryoperatorNode4 = (PUnaryOperator)nodeArrayList2.get(0);

        pelementNode1 = new ANormalElement(null, punitNode3, punaryoperatorNode4);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new168() /* reduce AAnormalelement4Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        TElementName telementnameNode2;
        PUnit punitNode3;
        PUnaryOperator punaryoperatorNode4;
        telementnameNode2 = (TElementName)nodeArrayList1.get(0);
        punitNode3 = (PUnit)nodeArrayList2.get(0);
        punaryoperatorNode4 = (PUnaryOperator)nodeArrayList3.get(0);

        pelementNode1 = new ANormalElement(telementnameNode2, punitNode3, punaryoperatorNode4);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new169() /* reduce AAseparatedelement1Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PUnit punitNode3;
        PUnit punitNode4;
        PManyOperator pmanyoperatorNode5;
        punitNode3 = (PUnit)nodeArrayList2.get(0);
        punitNode4 = (PUnit)nodeArrayList4.get(0);
        pmanyoperatorNode5 = (PManyOperator)nodeArrayList6.get(0);

        pelementNode1 = new ASeparatedElement(null, punitNode3, punitNode4, pmanyoperatorNode5);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new170() /* reduce AAseparatedelement2Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        TElementName telementnameNode2;
        PUnit punitNode3;
        PUnit punitNode4;
        PManyOperator pmanyoperatorNode5;
        telementnameNode2 = (TElementName)nodeArrayList1.get(0);
        punitNode3 = (PUnit)nodeArrayList3.get(0);
        punitNode4 = (PUnit)nodeArrayList5.get(0);
        pmanyoperatorNode5 = (PManyOperator)nodeArrayList7.get(0);

        pelementNode1 = new ASeparatedElement(telementnameNode2, punitNode3, punitNode4, pmanyoperatorNode5);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new171() /* reduce AAalternatedelement1Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        PUnit punitNode3;
        PUnit punitNode4;
        PManyOperator pmanyoperatorNode5;
        punitNode3 = (PUnit)nodeArrayList2.get(0);
        punitNode4 = (PUnit)nodeArrayList3.get(0);
        pmanyoperatorNode5 = (PManyOperator)nodeArrayList5.get(0);

        pelementNode1 = new AAlternatedElement(null, punitNode3, punitNode4, pmanyoperatorNode5);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new172() /* reduce AAalternatedelement2Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PElement pelementNode1;
        {
            // Block
        TElementName telementnameNode2;
        PUnit punitNode3;
        PUnit punitNode4;
        PManyOperator pmanyoperatorNode5;
        telementnameNode2 = (TElementName)nodeArrayList1.get(0);
        punitNode3 = (PUnit)nodeArrayList3.get(0);
        punitNode4 = (PUnit)nodeArrayList4.get(0);
        pmanyoperatorNode5 = (PManyOperator)nodeArrayList6.get(0);

        pelementNode1 = new AAlternatedElement(telementnameNode2, punitNode3, punitNode4, pmanyoperatorNode5);
        }
	nodeList.add(pelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new173() /* reduce AAdanglingelement1DanglingElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDanglingElement pdanglingelementNode1;
        {
            // Block
        TDanglingKeyword tdanglingkeywordNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        TIdentifier tidentifierNode4;
        TQMark tqmarkNode5;
        tdanglingkeywordNode2 = (TDanglingKeyword)nodeArrayList1.get(0);
        tidentifierNode4 = (TIdentifier)nodeArrayList2.get(0);
        tqmarkNode5 = (TQMark)nodeArrayList3.get(0);

        pdanglingelementNode1 = new ADanglingElement(tdanglingkeywordNode2, null, tidentifierNode4, tqmarkNode5);
        }
	nodeList.add(pdanglingelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new174() /* reduce AAdanglingelement2DanglingElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PDanglingElement pdanglingelementNode1;
        {
            // Block
        TDanglingKeyword tdanglingkeywordNode2;
        TElementName telementnameNode3;
        TIdentifier tidentifierNode4;
        TQMark tqmarkNode5;
        tdanglingkeywordNode2 = (TDanglingKeyword)nodeArrayList1.get(0);
        telementnameNode3 = (TElementName)nodeArrayList2.get(0);
        tidentifierNode4 = (TIdentifier)nodeArrayList3.get(0);
        tqmarkNode5 = (TQMark)nodeArrayList4.get(0);

        pdanglingelementNode1 = new ADanglingElement(tdanglingkeywordNode2, telementnameNode3, tidentifierNode4, tqmarkNode5);
        }
	nodeList.add(pdanglingelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new175() /* reduce AAparserpriorities1ParserPriorities */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode1 = new LinkedList();
        {
            // Block
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new176() /* reduce AAparserpriorities2ParserPriorities */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        listNode1 = (LinkedList)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new177() /* reduce ALeftParserPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserPriority pparserpriorityNode1;
        {
            // Block
        TLeftKeyword tleftkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        tleftkeywordNode2 = (TLeftKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparserpriorityNode1 = new ALeftParserPriority(tleftkeywordNode2, listNode4);
        }
	nodeList.add(pparserpriorityNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new178() /* reduce ARightParserPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserPriority pparserpriorityNode1;
        {
            // Block
        TRightKeyword trightkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        trightkeywordNode2 = (TRightKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparserpriorityNode1 = new ARightParserPriority(trightkeywordNode2, listNode4);
        }
	nodeList.add(pparserpriorityNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new179() /* reduce AUnaryParserPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PParserPriority pparserpriorityNode1;
        {
            // Block
        TUnaryKeyword tunarykeywordNode2;
        LinkedList listNode4 = new LinkedList();
        tunarykeywordNode2 = (TUnaryKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pparserpriorityNode1 = new AUnaryParserPriority(tunarykeywordNode2, listNode4);
        }
	nodeList.add(pparserpriorityNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new180() /* reduce AAtransformation1Transformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformation ptransformationNode1;
        {
            // Block
        TTransformationKeyword ttransformationkeywordNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        @SuppressWarnings("unused") Object nullNode4 = null;
        ttransformationkeywordNode2 = (TTransformationKeyword)nodeArrayList1.get(0);

        ptransformationNode1 = new ATransformation(ttransformationkeywordNode2, null, null);
        }
	nodeList.add(ptransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new181() /* reduce AAtransformation2Transformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformation ptransformationNode1;
        {
            // Block
        TTransformationKeyword ttransformationkeywordNode2;
        PProductionTransformations pproductiontransformationsNode3;
        @SuppressWarnings("unused") Object nullNode4 = null;
        ttransformationkeywordNode2 = (TTransformationKeyword)nodeArrayList1.get(0);
        pproductiontransformationsNode3 = (PProductionTransformations)nodeArrayList2.get(0);

        ptransformationNode1 = new ATransformation(ttransformationkeywordNode2, pproductiontransformationsNode3, null);
        }
	nodeList.add(ptransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new182() /* reduce AAtransformation3Transformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformation ptransformationNode1;
        {
            // Block
        TTransformationKeyword ttransformationkeywordNode2;
        @SuppressWarnings("unused") Object nullNode3 = null;
        PAlternativeTransformations palternativetransformationsNode4;
        ttransformationkeywordNode2 = (TTransformationKeyword)nodeArrayList1.get(0);
        palternativetransformationsNode4 = (PAlternativeTransformations)nodeArrayList2.get(0);

        ptransformationNode1 = new ATransformation(ttransformationkeywordNode2, null, palternativetransformationsNode4);
        }
	nodeList.add(ptransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new183() /* reduce AAtransformation4Transformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformation ptransformationNode1;
        {
            // Block
        TTransformationKeyword ttransformationkeywordNode2;
        PProductionTransformations pproductiontransformationsNode3;
        PAlternativeTransformations palternativetransformationsNode4;
        ttransformationkeywordNode2 = (TTransformationKeyword)nodeArrayList1.get(0);
        pproductiontransformationsNode3 = (PProductionTransformations)nodeArrayList2.get(0);
        palternativetransformationsNode4 = (PAlternativeTransformations)nodeArrayList3.get(0);

        ptransformationNode1 = new ATransformation(ttransformationkeywordNode2, pproductiontransformationsNode3, palternativetransformationsNode4);
        }
	nodeList.add(ptransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new184() /* reduce AAproductiontransformations1ProductionTransformations */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProductionTransformations pproductiontransformationsNode1;
        {
            // Block
        TProductionKeyword tproductionkeywordNode2;
        LinkedList listNode3 = new LinkedList();
        tproductionkeywordNode2 = (TProductionKeyword)nodeArrayList1.get(0);
        {
            // Block
        }

        pproductiontransformationsNode1 = new AProductionTransformations(tproductionkeywordNode2, listNode3);
        }
	nodeList.add(pproductiontransformationsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new185() /* reduce AAproductiontransformations2ProductionTransformations */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProductionTransformations pproductiontransformationsNode1;
        {
            // Block
        TProductionKeyword tproductionkeywordNode2;
        LinkedList listNode4 = new LinkedList();
        tproductionkeywordNode2 = (TProductionKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pproductiontransformationsNode1 = new AProductionTransformations(tproductionkeywordNode2, listNode4);
        }
	nodeList.add(pproductiontransformationsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new186() /* reduce AAproductiontransformation1ProductionTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProductionTransformation pproductiontransformationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TArrow tarrowNode3;
        LinkedList listNode4 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tarrowNode3 = (TArrow)nodeArrayList2.get(0);
        {
            // Block
        }

        pproductiontransformationNode1 = new AProductionTransformation(tidentifierNode2, tarrowNode3, listNode4);
        }
	nodeList.add(pproductiontransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new187() /* reduce AAproductiontransformation2ProductionTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PProductionTransformation pproductiontransformationNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TArrow tarrowNode3;
        LinkedList listNode5 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tarrowNode3 = (TArrow)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pproductiontransformationNode1 = new AProductionTransformation(tidentifierNode2, tarrowNode3, listNode5);
        }
	nodeList.add(pproductiontransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new188() /* reduce AAalternativetransformations1AlternativeTransformations */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlternativeTransformations palternativetransformationsNode1;
        {
            // Block
        TAlternativeKeyword talternativekeywordNode2;
        LinkedList listNode3 = new LinkedList();
        talternativekeywordNode2 = (TAlternativeKeyword)nodeArrayList1.get(0);
        {
            // Block
        }

        palternativetransformationsNode1 = new AAlternativeTransformations(talternativekeywordNode2, listNode3);
        }
	nodeList.add(palternativetransformationsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new189() /* reduce AAalternativetransformations2AlternativeTransformations */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlternativeTransformations palternativetransformationsNode1;
        {
            // Block
        TAlternativeKeyword talternativekeywordNode2;
        LinkedList listNode4 = new LinkedList();
        talternativekeywordNode2 = (TAlternativeKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        palternativetransformationsNode1 = new AAlternativeTransformations(talternativekeywordNode2, listNode4);
        }
	nodeList.add(palternativetransformationsNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new190() /* reduce AAalternativetransformation1AlternativeTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlternativeTransformation palternativetransformationNode1;
        {
            // Block
        PAlternativeReference palternativereferenceNode2;
        TArrow tarrowNode3;
        LinkedList listNode4 = new LinkedList();
        palternativereferenceNode2 = (PAlternativeReference)nodeArrayList1.get(0);
        tarrowNode3 = (TArrow)nodeArrayList2.get(0);
        {
            // Block
        }

        palternativetransformationNode1 = new AAlternativeTransformation(palternativereferenceNode2, tarrowNode3, listNode4);
        }
	nodeList.add(palternativetransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new191() /* reduce AAalternativetransformation2AlternativeTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlternativeTransformation palternativetransformationNode1;
        {
            // Block
        PAlternativeReference palternativereferenceNode2;
        TArrow tarrowNode3;
        LinkedList listNode5 = new LinkedList();
        palternativereferenceNode2 = (PAlternativeReference)nodeArrayList1.get(0);
        tarrowNode3 = (TArrow)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        palternativetransformationNode1 = new AAlternativeTransformation(palternativereferenceNode2, tarrowNode3, listNode5);
        }
	nodeList.add(palternativetransformationNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new192() /* reduce AUnnamedAlternativeReference */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlternativeReference palternativereferenceNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        palternativereferenceNode1 = new AUnnamedAlternativeReference(tidentifierNode2);
        }
	nodeList.add(palternativereferenceNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new193() /* reduce ANamedAlternativeReference */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PAlternativeReference palternativereferenceNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TDot tdotNode3;
        TIdentifier tidentifierNode4;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tdotNode3 = (TDot)nodeArrayList2.get(0);
        tidentifierNode4 = (TIdentifier)nodeArrayList3.get(0);

        palternativereferenceNode1 = new ANamedAlternativeReference(tidentifierNode2, tdotNode3, tidentifierNode4);
        }
	nodeList.add(palternativereferenceNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new194() /* reduce ANullTransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformationElement ptransformationelementNode1;
        {
            // Block
        TNullKeyword tnullkeywordNode2;
        tnullkeywordNode2 = (TNullKeyword)nodeArrayList1.get(0);

        ptransformationelementNode1 = new ANullTransformationElement(tnullkeywordNode2);
        }
	nodeList.add(ptransformationelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new195() /* reduce AReference$Natural1TransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformationElement ptransformationelementNode1;
        {
            // Block
        PElementReference pelementreferenceNode2;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pelementreferenceNode2 = new ANaturalElementReference(tidentifierNode3);
        }

        ptransformationelementNode1 = new AReferenceTransformationElement(pelementreferenceNode2);
        }
	nodeList.add(ptransformationelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new196() /* reduce AReference$Transformed1TransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformationElement ptransformationelementNode1;
        {
            // Block
        PElementReference pelementreferenceNode2;
        {
            // Block
        TIdentifier tidentifierNode3;
        TDot tdotNode4;
        TIdentifier tidentifierNode5;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);

        pelementreferenceNode2 = new ATransformedElementReference(tidentifierNode3, tdotNode4, tidentifierNode5);
        }

        ptransformationelementNode1 = new AReferenceTransformationElement(pelementreferenceNode2);
        }
	nodeList.add(ptransformationelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new197() /* reduce AAnewtransformationelement1TransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformationElement ptransformationelementNode1;
        {
            // Block
        TNewKeyword tnewkeywordNode2;
        PAlternativeReference palternativereferenceNode3;
        TLPar tlparNode4;
        LinkedList listNode5 = new LinkedList();
        TRPar trparNode6;
        tnewkeywordNode2 = (TNewKeyword)nodeArrayList1.get(0);
        palternativereferenceNode3 = (PAlternativeReference)nodeArrayList2.get(0);
        tlparNode4 = (TLPar)nodeArrayList3.get(0);
        {
            // Block
        }
        trparNode6 = (TRPar)nodeArrayList4.get(0);

        ptransformationelementNode1 = new ANewTransformationElement(tnewkeywordNode2, palternativereferenceNode3, tlparNode4, listNode5, trparNode6);
        }
	nodeList.add(ptransformationelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new198() /* reduce AAnewtransformationelement2TransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformationElement ptransformationelementNode1;
        {
            // Block
        TNewKeyword tnewkeywordNode2;
        PAlternativeReference palternativereferenceNode3;
        TLPar tlparNode4;
        LinkedList listNode6 = new LinkedList();
        TRPar trparNode7;
        tnewkeywordNode2 = (TNewKeyword)nodeArrayList1.get(0);
        palternativereferenceNode3 = (PAlternativeReference)nodeArrayList2.get(0);
        tlparNode4 = (TLPar)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        trparNode7 = (TRPar)nodeArrayList5.get(0);

        ptransformationelementNode1 = new ANewTransformationElement(tnewkeywordNode2, palternativereferenceNode3, tlparNode4, listNode6, trparNode7);
        }
	nodeList.add(ptransformationelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new199() /* reduce AAlisttransformationelement1TransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformationElement ptransformationelementNode1;
        {
            // Block
        TListKeyword tlistkeywordNode2;
        TLPar tlparNode3;
        LinkedList listNode4 = new LinkedList();
        TRPar trparNode5;
        tlistkeywordNode2 = (TListKeyword)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        {
            // Block
        }
        trparNode5 = (TRPar)nodeArrayList3.get(0);

        ptransformationelementNode1 = new AListTransformationElement(tlistkeywordNode2, tlparNode3, listNode4, trparNode5);
        }
	nodeList.add(ptransformationelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new200() /* reduce AAlisttransformationelement2TransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTransformationElement ptransformationelementNode1;
        {
            // Block
        TListKeyword tlistkeywordNode2;
        TLPar tlparNode3;
        LinkedList listNode5 = new LinkedList();
        TRPar trparNode6;
        tlistkeywordNode2 = (TListKeyword)nodeArrayList1.get(0);
        tlparNode3 = (TLPar)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        trparNode6 = (TRPar)nodeArrayList4.get(0);

        ptransformationelementNode1 = new AListTransformationElement(tlistkeywordNode2, tlparNode3, listNode5, trparNode6);
        }
	nodeList.add(ptransformationelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new201() /* reduce AReference$Natural1ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListElement plistelementNode1;
        {
            // Block
        PElementReference pelementreferenceNode2;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pelementreferenceNode2 = new ANaturalElementReference(tidentifierNode3);
        }

        plistelementNode1 = new AReferenceListElement(pelementreferenceNode2);
        }
	nodeList.add(plistelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new202() /* reduce AReference$Transformed1ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListElement plistelementNode1;
        {
            // Block
        PElementReference pelementreferenceNode2;
        {
            // Block
        TIdentifier tidentifierNode3;
        TDot tdotNode4;
        TIdentifier tidentifierNode5;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);

        pelementreferenceNode2 = new ATransformedElementReference(tidentifierNode3, tdotNode4, tidentifierNode5);
        }

        plistelementNode1 = new AReferenceListElement(pelementreferenceNode2);
        }
	nodeList.add(plistelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new203() /* reduce AListReference$Natural1ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListElement plistelementNode1;
        {
            // Block
        PElementReference pelementreferenceNode2;
        TThreeDots tthreedotsNode4;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pelementreferenceNode2 = new ANaturalElementReference(tidentifierNode3);
        }
        tthreedotsNode4 = (TThreeDots)nodeArrayList2.get(0);

        plistelementNode1 = new AListReferenceListElement(pelementreferenceNode2, tthreedotsNode4);
        }
	nodeList.add(plistelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new204() /* reduce AListReference$Transformed1ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListElement plistelementNode1;
        {
            // Block
        PElementReference pelementreferenceNode2;
        TThreeDots tthreedotsNode6;
        {
            // Block
        TIdentifier tidentifierNode3;
        TDot tdotNode4;
        TIdentifier tidentifierNode5;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);

        pelementreferenceNode2 = new ATransformedElementReference(tidentifierNode3, tdotNode4, tidentifierNode5);
        }
        tthreedotsNode6 = (TThreeDots)nodeArrayList4.get(0);

        plistelementNode1 = new AListReferenceListElement(pelementreferenceNode2, tthreedotsNode6);
        }
	nodeList.add(plistelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new205() /* reduce ALeftListReference$Natural1ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListElement plistelementNode1;
        {
            // Block
        PElementReference pelementreferenceNode2;
        TLeftKeyword tleftkeywordNode4;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pelementreferenceNode2 = new ANaturalElementReference(tidentifierNode3);
        }
        tleftkeywordNode4 = (TLeftKeyword)nodeArrayList3.get(0);

        plistelementNode1 = new ALeftListReferenceListElement(pelementreferenceNode2, tleftkeywordNode4);
        }
	nodeList.add(plistelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new206() /* reduce ALeftListReference$Transformed1ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListElement plistelementNode1;
        {
            // Block
        PElementReference pelementreferenceNode2;
        TLeftKeyword tleftkeywordNode6;
        {
            // Block
        TIdentifier tidentifierNode3;
        TDot tdotNode4;
        TIdentifier tidentifierNode5;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);

        pelementreferenceNode2 = new ATransformedElementReference(tidentifierNode3, tdotNode4, tidentifierNode5);
        }
        tleftkeywordNode6 = (TLeftKeyword)nodeArrayList5.get(0);

        plistelementNode1 = new ALeftListReferenceListElement(pelementreferenceNode2, tleftkeywordNode6);
        }
	nodeList.add(plistelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new207() /* reduce ARightListReference$Natural1ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListElement plistelementNode1;
        {
            // Block
        PElementReference pelementreferenceNode2;
        TRightKeyword trightkeywordNode4;
        {
            // Block
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);

        pelementreferenceNode2 = new ANaturalElementReference(tidentifierNode3);
        }
        trightkeywordNode4 = (TRightKeyword)nodeArrayList3.get(0);

        plistelementNode1 = new ARightListReferenceListElement(pelementreferenceNode2, trightkeywordNode4);
        }
	nodeList.add(plistelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new208() /* reduce ARightListReference$Transformed1ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListElement plistelementNode1;
        {
            // Block
        PElementReference pelementreferenceNode2;
        TRightKeyword trightkeywordNode6;
        {
            // Block
        TIdentifier tidentifierNode3;
        TDot tdotNode4;
        TIdentifier tidentifierNode5;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tdotNode4 = (TDot)nodeArrayList2.get(0);
        tidentifierNode5 = (TIdentifier)nodeArrayList3.get(0);

        pelementreferenceNode2 = new ATransformedElementReference(tidentifierNode3, tdotNode4, tidentifierNode5);
        }
        trightkeywordNode6 = (TRightKeyword)nodeArrayList5.get(0);

        plistelementNode1 = new ARightListReferenceListElement(pelementreferenceNode2, trightkeywordNode6);
        }
	nodeList.add(plistelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new209() /* reduce AAnewlistelement1ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListElement plistelementNode1;
        {
            // Block
        TNewKeyword tnewkeywordNode2;
        PAlternativeReference palternativereferenceNode3;
        TLPar tlparNode4;
        LinkedList listNode5 = new LinkedList();
        TRPar trparNode6;
        tnewkeywordNode2 = (TNewKeyword)nodeArrayList1.get(0);
        palternativereferenceNode3 = (PAlternativeReference)nodeArrayList2.get(0);
        tlparNode4 = (TLPar)nodeArrayList3.get(0);
        {
            // Block
        }
        trparNode6 = (TRPar)nodeArrayList4.get(0);

        plistelementNode1 = new ANewListElement(tnewkeywordNode2, palternativereferenceNode3, tlparNode4, listNode5, trparNode6);
        }
	nodeList.add(plistelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new210() /* reduce AAnewlistelement2ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PListElement plistelementNode1;
        {
            // Block
        TNewKeyword tnewkeywordNode2;
        PAlternativeReference palternativereferenceNode3;
        TLPar tlparNode4;
        LinkedList listNode6 = new LinkedList();
        TRPar trparNode7;
        tnewkeywordNode2 = (TNewKeyword)nodeArrayList1.get(0);
        palternativereferenceNode3 = (PAlternativeReference)nodeArrayList2.get(0);
        tlparNode4 = (TLPar)nodeArrayList3.get(0);
        {
            // Block
        LinkedList listNode5 = new LinkedList();
        listNode5 = (LinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        trparNode7 = (TRPar)nodeArrayList5.get(0);

        plistelementNode1 = new ANewListElement(tnewkeywordNode2, palternativereferenceNode3, tlparNode4, listNode6, trparNode7);
        }
	nodeList.add(plistelementNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new211() /* reduce AAtree1Tree */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTree ptreeNode1;
        {
            // Block
        TTreeKeyword ttreekeywordNode2;
        LinkedList listNode3 = new LinkedList();
        ttreekeywordNode2 = (TTreeKeyword)nodeArrayList1.get(0);
        {
            // Block
        }

        ptreeNode1 = new ATree(ttreekeywordNode2, listNode3);
        }
	nodeList.add(ptreeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new212() /* reduce AAtree2Tree */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTree ptreeNode1;
        {
            // Block
        TTreeKeyword ttreekeywordNode2;
        LinkedList listNode4 = new LinkedList();
        ttreekeywordNode2 = (TTreeKeyword)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        ptreeNode1 = new ATree(ttreekeywordNode2, listNode4);
        }
	nodeList.add(ptreeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new213() /* reduce ATreeProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTreeProduction ptreeproductionNode1;
        {
            // Block
        TIdentifier tidentifierNode2;
        TAssign tassignNode3;
        LinkedList listNode5 = new LinkedList();
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);
        tassignNode3 = (TAssign)nodeArrayList2.get(0);
        {
            // Block
        LinkedList listNode4 = new LinkedList();
        listNode4 = (LinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        ptreeproductionNode1 = new ATreeProduction(tidentifierNode2, tassignNode3, listNode5);
        }
	nodeList.add(ptreeproductionNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new214() /* reduce AAtreealternatives1TreeAlternatives */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTreeAlternative ptreealternativeNode1;
        ptreealternativeNode1 = (PTreeAlternative)nodeArrayList1.get(0);
	if(ptreealternativeNode1 != null)
	{
	  listNode2.add(ptreealternativeNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new215() /* reduce AAtreealternatives2TreeAlternatives */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        PTreeAlternative ptreealternativeNode1;
        LinkedList listNode2 = new LinkedList();
        ptreealternativeNode1 = (PTreeAlternative)nodeArrayList1.get(0);
        listNode2 = (LinkedList)nodeArrayList2.get(0);
	if(ptreealternativeNode1 != null)
	{
	  listNode3.add(ptreealternativeNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new216() /* reduce AAdditionalTreeAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTreeAlternative ptreealternativeNode1;
        ptreealternativeNode1 = (PTreeAlternative)nodeArrayList2.get(0);
	nodeList.add(ptreealternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new217() /* reduce AAnormaltreealternative1TreeAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTreeAlternative ptreealternativeNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode4 = new LinkedList();
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        ptreealternativeNode1 = new ATreeAlternative(null, listNode4);
        }
	nodeList.add(ptreealternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new218() /* reduce AAnormaltreealternative2TreeAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTreeAlternative ptreealternativeNode1;
        {
            // Block
        TAlternativeName talternativenameNode2;
        LinkedList listNode4 = new LinkedList();
        talternativenameNode2 = (TAlternativeName)nodeArrayList1.get(0);
        {
            // Block
        LinkedList listNode3 = new LinkedList();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        ptreealternativeNode1 = new ATreeAlternative(talternativenameNode2, listNode4);
        }
	nodeList.add(ptreealternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new219() /* reduce AAemptytreealternative1TreeAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTreeAlternative ptreealternativeNode1;
        {
            // Block
        @SuppressWarnings("unused") Object nullNode2 = null;
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        }

        ptreealternativeNode1 = new ATreeAlternative(null, listNode3);
        }
	nodeList.add(ptreealternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new220() /* reduce AAemptytreealternative2TreeAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        PTreeAlternative ptreealternativeNode1;
        {
            // Block
        TAlternativeName talternativenameNode2;
        LinkedList listNode3 = new LinkedList();
        talternativenameNode2 = (TAlternativeName)nodeArrayList1.get(0);
        {
            // Block
        }

        ptreealternativeNode1 = new ATreeAlternative(talternativenameNode2, listNode3);
        }
	nodeList.add(ptreealternativeNode1);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new221() /* reduce ATerminal$NamedExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PNamedExpression pnamedexpressionNode1;
        pnamedexpressionNode1 = (PNamedExpression)nodeArrayList1.get(0);
	if(pnamedexpressionNode1 != null)
	{
	  listNode2.add(pnamedexpressionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new222() /* reduce ANonTerminal$NamedExpression */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PNamedExpression pnamedexpressionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pnamedexpressionNode2 = (PNamedExpression)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pnamedexpressionNode2 != null)
	{
	  listNode3.add(pnamedexpressionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new223() /* reduce ATerminal$LexerPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PLexerPriority plexerpriorityNode1;
        plexerpriorityNode1 = (PLexerPriority)nodeArrayList1.get(0);
	if(plexerpriorityNode1 != null)
	{
	  listNode2.add(plexerpriorityNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new224() /* reduce ANonTerminal$LexerPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PLexerPriority plexerpriorityNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plexerpriorityNode2 = (PLexerPriority)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plexerpriorityNode2 != null)
	{
	  listNode3.add(plexerpriorityNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new225() /* reduce ATerminal$LexerNamedContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PLexerContext plexercontextNode1;
        plexercontextNode1 = (PLexerContext)nodeArrayList1.get(0);
	if(plexercontextNode1 != null)
	{
	  listNode2.add(plexercontextNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new226() /* reduce ANonTerminal$LexerNamedContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PLexerContext plexercontextNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plexercontextNode2 = (PLexerContext)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plexercontextNode2 != null)
	{
	  listNode3.add(plexercontextNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new227() /* reduce ATerminal$AdditionalUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PUnit punitNode1;
        punitNode1 = (PUnit)nodeArrayList1.get(0);
	if(punitNode1 != null)
	{
	  listNode2.add(punitNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new228() /* reduce ANonTerminal$AdditionalUnit */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PUnit punitNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        punitNode2 = (PUnit)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(punitNode2 != null)
	{
	  listNode3.add(punitNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new229() /* reduce ATerminal$Investigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PInvestigator pinvestigatorNode1;
        pinvestigatorNode1 = (PInvestigator)nodeArrayList1.get(0);
	if(pinvestigatorNode1 != null)
	{
	  listNode2.add(pinvestigatorNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new230() /* reduce ANonTerminal$Investigator */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PInvestigator pinvestigatorNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pinvestigatorNode2 = (PInvestigator)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pinvestigatorNode2 != null)
	{
	  listNode3.add(pinvestigatorNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new231() /* reduce ATerminal$Selector */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PSelector pselectorNode1;
        pselectorNode1 = (PSelector)nodeArrayList1.get(0);
	if(pselectorNode1 != null)
	{
	  listNode2.add(pselectorNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new232() /* reduce ANonTerminal$Selector */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PSelector pselectorNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pselectorNode2 = (PSelector)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pselectorNode2 != null)
	{
	  listNode3.add(pselectorNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new233() /* reduce ATerminal$AdditionalIdentifier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode2.add(tidentifierNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new234() /* reduce ANonTerminal$AdditionalIdentifier */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        TIdentifier tidentifierNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        tidentifierNode2 = (TIdentifier)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(tidentifierNode2 != null)
	{
	  listNode3.add(tidentifierNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new235() /* reduce ATerminal$ParserNamedContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserContext pparsercontextNode1;
        pparsercontextNode1 = (PParserContext)nodeArrayList1.get(0);
	if(pparsercontextNode1 != null)
	{
	  listNode2.add(pparsercontextNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new236() /* reduce ANonTerminal$ParserNamedContext */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParserContext pparsercontextNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparsercontextNode2 = (PParserContext)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparsercontextNode2 != null)
	{
	  listNode3.add(pparsercontextNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new237() /* reduce ATerminal$ParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserProduction pparserproductionNode1;
        pparserproductionNode1 = (PParserProduction)nodeArrayList1.get(0);
	if(pparserproductionNode1 != null)
	{
	  listNode2.add(pparserproductionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new238() /* reduce ANonTerminal$ParserProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParserProduction pparserproductionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparserproductionNode2 = (PParserProduction)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparserproductionNode2 != null)
	{
	  listNode3.add(pparserproductionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new239() /* reduce ATerminal$AdditionalParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserAlternative pparseralternativeNode1;
        pparseralternativeNode1 = (PParserAlternative)nodeArrayList1.get(0);
	if(pparseralternativeNode1 != null)
	{
	  listNode2.add(pparseralternativeNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new240() /* reduce ANonTerminal$AdditionalParserAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParserAlternative pparseralternativeNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparseralternativeNode2 = (PParserAlternative)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparseralternativeNode2 != null)
	{
	  listNode3.add(pparseralternativeNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new241() /* reduce ATerminal$Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PElement pelementNode1;
        pelementNode1 = (PElement)nodeArrayList1.get(0);
	if(pelementNode1 != null)
	{
	  listNode2.add(pelementNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new242() /* reduce ANonTerminal$Element */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PElement pelementNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pelementNode2 = (PElement)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pelementNode2 != null)
	{
	  listNode3.add(pelementNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new243() /* reduce ATerminal$ParserPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PParserPriority pparserpriorityNode1;
        pparserpriorityNode1 = (PParserPriority)nodeArrayList1.get(0);
	if(pparserpriorityNode1 != null)
	{
	  listNode2.add(pparserpriorityNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new244() /* reduce ANonTerminal$ParserPriority */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PParserPriority pparserpriorityNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pparserpriorityNode2 = (PParserPriority)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pparserpriorityNode2 != null)
	{
	  listNode3.add(pparserpriorityNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new245() /* reduce ATerminal$ProductionTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PProductionTransformation pproductiontransformationNode1;
        pproductiontransformationNode1 = (PProductionTransformation)nodeArrayList1.get(0);
	if(pproductiontransformationNode1 != null)
	{
	  listNode2.add(pproductiontransformationNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new246() /* reduce ANonTerminal$ProductionTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PProductionTransformation pproductiontransformationNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pproductiontransformationNode2 = (PProductionTransformation)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pproductiontransformationNode2 != null)
	{
	  listNode3.add(pproductiontransformationNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new247() /* reduce ATerminal$AlternativeTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PAlternativeTransformation palternativetransformationNode1;
        palternativetransformationNode1 = (PAlternativeTransformation)nodeArrayList1.get(0);
	if(palternativetransformationNode1 != null)
	{
	  listNode2.add(palternativetransformationNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new248() /* reduce ANonTerminal$AlternativeTransformation */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PAlternativeTransformation palternativetransformationNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        palternativetransformationNode2 = (PAlternativeTransformation)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(palternativetransformationNode2 != null)
	{
	  listNode3.add(palternativetransformationNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new249() /* reduce ATerminal$TransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTransformationElement ptransformationelementNode1;
        ptransformationelementNode1 = (PTransformationElement)nodeArrayList1.get(0);
	if(ptransformationelementNode1 != null)
	{
	  listNode2.add(ptransformationelementNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new250() /* reduce ANonTerminal$TransformationElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PTransformationElement ptransformationelementNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ptransformationelementNode2 = (PTransformationElement)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ptransformationelementNode2 != null)
	{
	  listNode3.add(ptransformationelementNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new251() /* reduce ATerminal$ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PListElement plistelementNode1;
        plistelementNode1 = (PListElement)nodeArrayList1.get(0);
	if(plistelementNode1 != null)
	{
	  listNode2.add(plistelementNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new252() /* reduce ANonTerminal$ListElement */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PListElement plistelementNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        plistelementNode2 = (PListElement)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(plistelementNode2 != null)
	{
	  listNode3.add(plistelementNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new253() /* reduce ATerminal$TreeProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTreeProduction ptreeproductionNode1;
        ptreeproductionNode1 = (PTreeProduction)nodeArrayList1.get(0);
	if(ptreeproductionNode1 != null)
	{
	  listNode2.add(ptreeproductionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new254() /* reduce ANonTerminal$TreeProduction */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PTreeProduction ptreeproductionNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ptreeproductionNode2 = (PTreeProduction)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ptreeproductionNode2 != null)
	{
	  listNode3.add(ptreeproductionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new255() /* reduce ATerminal$AdditionalTreeAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode2 = new LinkedList();
        {
            // Block
        PTreeAlternative ptreealternativeNode1;
        ptreealternativeNode1 = (PTreeAlternative)nodeArrayList1.get(0);
	if(ptreealternativeNode1 != null)
	{
	  listNode2.add(ptreealternativeNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings("unchecked")
    ArrayList new256() /* reduce ANonTerminal$AdditionalTreeAlternative */
    {
        @SuppressWarnings("hiding") ArrayList nodeList = new ArrayList();

        @SuppressWarnings("unused") ArrayList nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList nodeArrayList1 = pop();
        LinkedList listNode3 = new LinkedList();
        {
            // Block
        LinkedList listNode1 = new LinkedList();
        PTreeAlternative ptreealternativeNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        ptreealternativeNode2 = (PTreeAlternative)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(ptreealternativeNode2 != null)
	{
	  listNode3.add(ptreealternativeNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {8, SHIFT, 1}, },
			{{-1, ERROR, 1}, {34, SHIFT, 3}, },
			{{-1, ERROR, 2}, {74, ACCEPT, -1}, },
			{{-1, ERROR, 3}, {49, SHIFT, 4}, },
			{{-1, REDUCE, 0}, {13, SHIFT, 5}, {21, SHIFT, 6}, {31, SHIFT, 7}, {32, SHIFT, 8}, {63, SHIFT, 9}, },
			{{-1, REDUCE, 99}, {10, SHIFT, 14}, {30, SHIFT, 15}, {34, SHIFT, 16}, },
			{{-1, REDUCE, 144}, {4, SHIFT, 24}, {25, SHIFT, 25}, {30, SHIFT, 26}, {34, SHIFT, 27}, },
			{{-1, REDUCE, 180}, {0, SHIFT, 34}, {23, SHIFT, 35}, },
			{{-1, REDUCE, 211}, {34, SHIFT, 38}, },
			{{-1, REDUCE, 16}, },
			{{-1, REDUCE, 1}, {21, SHIFT, 6}, {31, SHIFT, 7}, {32, SHIFT, 8}, {63, SHIFT, 41}, },
			{{-1, REDUCE, 2}, {31, SHIFT, 7}, {32, SHIFT, 8}, {63, SHIFT, 45}, },
			{{-1, REDUCE, 4}, {32, SHIFT, 8}, {63, SHIFT, 48}, },
			{{-1, REDUCE, 8}, {63, SHIFT, 50}, },
			{{-1, REDUCE, 107}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {56, SHIFT, 58}, },
			{{-1, REDUCE, 103}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {56, SHIFT, 63}, },
			{{-1, ERROR, 16}, {45, SHIFT, 66}, },
			{{-1, REDUCE, 221}, },
			{{-1, REDUCE, 32}, {11, SHIFT, 67}, {22, SHIFT, 68}, {26, SHIFT, 69}, },
			{{-1, REDUCE, 95}, {3, SHIFT, 73}, },
			{{-1, REDUCE, 97}, },
			{{-1, REDUCE, 100}, {10, SHIFT, 14}, },
			{{-1, REDUCE, 101}, },
			{{-1, REDUCE, 99}, {10, SHIFT, 14}, {30, SHIFT, 15}, {34, SHIFT, 16}, },
			{{-1, REDUCE, 150}, },
			{{-1, REDUCE, 144}, {4, SHIFT, 24}, {30, SHIFT, 26}, {34, SHIFT, 79}, {56, SHIFT, 80}, },
			{{-1, REDUCE, 151}, },
			{{-1, ERROR, 27}, {45, SHIFT, 84}, },
			{{-1, REDUCE, 123}, {11, SHIFT, 67}, {26, SHIFT, 69}, },
			{{-1, REDUCE, 142}, {3, SHIFT, 87}, },
			{{-1, REDUCE, 237}, },
			{{-1, ERROR, 31}, {34, SHIFT, 27}, },
			{{-1, REDUCE, 148}, },
			{{-1, REDUCE, 145}, {4, SHIFT, 24}, {30, SHIFT, 26}, {34, SHIFT, 27}, },
			{{-1, REDUCE, 188}, {34, SHIFT, 92}, },
			{{-1, REDUCE, 184}, {34, SHIFT, 96}, },
			{{-1, REDUCE, 181}, {0, SHIFT, 34}, },
			{{-1, REDUCE, 182}, },
			{{-1, ERROR, 38}, {45, SHIFT, 100}, },
			{{-1, REDUCE, 253}, },
			{{-1, REDUCE, 212}, {34, SHIFT, 38}, },
			{{-1, REDUCE, 17}, },
			{{-1, REDUCE, 3}, {31, SHIFT, 7}, {32, SHIFT, 8}, {63, SHIFT, 102}, },
			{{-1, REDUCE, 5}, {32, SHIFT, 8}, {63, SHIFT, 105}, },
			{{-1, REDUCE, 9}, {63, SHIFT, 107}, },
			{{-1, REDUCE, 18}, },
			{{-1, REDUCE, 6}, {32, SHIFT, 8}, {63, SHIFT, 108}, },
			{{-1, REDUCE, 10}, {63, SHIFT, 110}, },
			{{-1, REDUCE, 20}, },
			{{-1, REDUCE, 12}, {63, SHIFT, 111}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 80}, },
			{{-1, REDUCE, 77}, },
			{{-1, REDUCE, 82}, },
			{{-1, REDUCE, 78}, },
			{{-1, REDUCE, 83}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 109}, },
			{{-1, REDUCE, 111}, {50, SHIFT, 112}, },
			{{-1, REDUCE, 79}, },
			{{-1, REDUCE, 108}, },
			{{-1, ERROR, 62}, {56, SHIFT, 115}, },
			{{-1, REDUCE, 105}, },
			{{-1, REDUCE, 104}, },
			{{-1, ERROR, 65}, {56, SHIFT, 116}, },
			{{-1, ERROR, 66}, {2, SHIFT, 117}, {6, SHIFT, 51}, {15, SHIFT, 118}, {28, SHIFT, 119}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 116}, {34, SHIFT, 130}, },
			{{-1, REDUCE, 92}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, },
			{{-1, REDUCE, 119}, {43, SHIFT, 136}, },
			{{-1, REDUCE, 34}, {11, SHIFT, 67}, {26, SHIFT, 69}, },
			{{-1, REDUCE, 36}, {26, SHIFT, 69}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 73}, {34, SHIFT, 143}, },
			{{-1, REDUCE, 225}, },
			{{-1, REDUCE, 96}, {3, SHIFT, 73}, },
			{{-1, REDUCE, 102}, },
			{{-1, REDUCE, 222}, },
			{{-1, REDUCE, 33}, {11, SHIFT, 67}, {22, SHIFT, 68}, {26, SHIFT, 69}, },
			{{-1, REDUCE, 137}, {45, SHIFT, 84}, {50, SHIFT, 148}, },
			{{-1, REDUCE, 135}, },
			{{-1, REDUCE, 144}, {4, SHIFT, 24}, {30, SHIFT, 26}, {34, SHIFT, 27}, },
			{{-1, ERROR, 82}, {56, SHIFT, 152}, },
			{{-1, REDUCE, 124}, {11, SHIFT, 67}, {26, SHIFT, 69}, },
			{{-1, ERROR, 84}, {5, SHIFT, 155}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {35, SHIFT, 156}, {36, SHIFT, 157}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 158}, },
			{{-1, REDUCE, 126}, {26, SHIFT, 69}, },
			{{-1, REDUCE, 129}, },
			{{-1, ERROR, 87}, {34, SHIFT, 165}, },
			{{-1, REDUCE, 235}, },
			{{-1, REDUCE, 143}, {3, SHIFT, 87}, },
			{{-1, REDUCE, 149}, },
			{{-1, REDUCE, 238}, },
			{{-1, REDUCE, 192}, {51, SHIFT, 167}, },
			{{-1, REDUCE, 247}, },
			{{-1, ERROR, 94}, {46, SHIFT, 168}, },
			{{-1, REDUCE, 189}, {34, SHIFT, 92}, },
			{{-1, ERROR, 96}, {46, SHIFT, 170}, },
			{{-1, REDUCE, 245}, },
			{{-1, REDUCE, 185}, {34, SHIFT, 96}, },
			{{-1, REDUCE, 183}, },
			{{-1, ERROR, 100}, {5, SHIFT, 172}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {35, SHIFT, 173}, {36, SHIFT, 157}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 158}, },
			{{-1, REDUCE, 254}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 7}, {32, SHIFT, 8}, {63, SHIFT, 177}, },
			{{-1, REDUCE, 11}, {63, SHIFT, 179}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 13}, {63, SHIFT, 180}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 14}, {63, SHIFT, 181}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 113}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, },
			{{-1, REDUCE, 227}, },
			{{-1, REDUCE, 112}, {50, SHIFT, 183}, },
			{{-1, REDUCE, 110}, },
			{{-1, REDUCE, 106}, },
			{{-1, REDUCE, 75}, },
			{{-1, ERROR, 118}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 119}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 121}, {2, SHIFT, 117}, {6, SHIFT, 51}, {15, SHIFT, 118}, {28, SHIFT, 119}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 122}, {47, SHIFT, 189}, {56, SHIFT, 190}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 64}, {1, SHIFT, 191}, },
			{{-1, REDUCE, 51}, {1, SHIFT, 192}, {2, SHIFT, 117}, {6, SHIFT, 51}, {7, SHIFT, 193}, {16, SHIFT, 194}, {17, SHIFT, 195}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, {53, SHIFT, 196}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 70}, {48, SHIFT, 198}, {54, SHIFT, 199}, {55, SHIFT, 200}, {57, SHIFT, 201}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 79}, {59, SHIFT, 204}, },
			{{-1, ERROR, 130}, {43, SHIFT, 205}, },
			{{-1, REDUCE, 229}, },
			{{-1, REDUCE, 117}, {34, SHIFT, 130}, },
			{{-1, ERROR, 133}, {52, SHIFT, 207}, },
			{{-1, REDUCE, 223}, },
			{{-1, REDUCE, 93}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, },
			{{-1, ERROR, 136}, {34, SHIFT, 209}, },
			{{-1, REDUCE, 231}, },
			{{-1, ERROR, 138}, {45, SHIFT, 210}, },
			{{-1, REDUCE, 120}, {43, SHIFT, 136}, },
			{{-1, REDUCE, 38}, {26, SHIFT, 69}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 44}, },
			{{-1, ERROR, 143}, {49, SHIFT, 213}, },
			{{-1, REDUCE, 226}, },
			{{-1, REDUCE, 35}, {11, SHIFT, 67}, {26, SHIFT, 69}, },
			{{-1, REDUCE, 37}, {26, SHIFT, 69}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 139}, {34, SHIFT, 217}, },
			{{-1, REDUCE, 233}, },
			{{-1, REDUCE, 138}, {50, SHIFT, 218}, },
			{{-1, REDUCE, 125}, {11, SHIFT, 67}, {26, SHIFT, 69}, },
			{{-1, REDUCE, 136}, },
			{{-1, REDUCE, 127}, {26, SHIFT, 69}, },
			{{-1, REDUCE, 130}, },
			{{-1, REDUCE, 161}, {4, SHIFT, 223}, },
			{{-1, ERROR, 156}, {5, SHIFT, 225}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {36, SHIFT, 157}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 158}, },
			{{-1, ERROR, 157}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 227}, },
			{{-1, ERROR, 158}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, },
			{{-1, REDUCE, 165}, {48, SHIFT, 198}, {54, SHIFT, 199}, {55, SHIFT, 200}, {57, SHIFT, 201}, },
			{{-1, ERROR, 160}, {56, SHIFT, 231}, },
			{{-1, REDUCE, 154}, {47, SHIFT, 232}, },
			{{-1, REDUCE, 241}, },
			{{-1, REDUCE, 157}, {4, SHIFT, 223}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {36, SHIFT, 157}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 158}, },
			{{-1, REDUCE, 132}, },
			{{-1, ERROR, 165}, {49, SHIFT, 237}, },
			{{-1, REDUCE, 236}, },
			{{-1, ERROR, 167}, {34, SHIFT, 238}, },
			{{-1, ERROR, 168}, {14, SHIFT, 239}, {19, SHIFT, 240}, {20, SHIFT, 241}, {34, SHIFT, 242}, {56, SHIFT, 243}, },
			{{-1, REDUCE, 248}, },
			{{-1, ERROR, 170}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {36, SHIFT, 157}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 158}, {56, SHIFT, 246}, },
			{{-1, REDUCE, 246}, },
			{{-1, REDUCE, 219}, },
			{{-1, ERROR, 173}, {5, SHIFT, 248}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {36, SHIFT, 157}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 158}, },
			{{-1, ERROR, 174}, {56, SHIFT, 250}, },
			{{-1, REDUCE, 214}, {47, SHIFT, 251}, },
			{{-1, REDUCE, 217}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {36, SHIFT, 157}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 158}, },
			{{-1, REDUCE, 23}, },
			{{-1, REDUCE, 15}, {63, SHIFT, 254}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 30}, },
			{{-1, REDUCE, 115}, },
			{{-1, REDUCE, 114}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, },
			{{-1, REDUCE, 228}, },
			{{-1, REDUCE, 61}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 60}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 187}, {44, SHIFT, 255}, {47, SHIFT, 189}, },
			{{-1, REDUCE, 70}, {27, SHIFT, 256}, {48, SHIFT, 198}, {54, SHIFT, 199}, {55, SHIFT, 200}, {57, SHIFT, 201}, },
			{{-1, ERROR, 189}, {2, SHIFT, 117}, {6, SHIFT, 51}, {15, SHIFT, 118}, {28, SHIFT, 119}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 191}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 192}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 193}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 194}, {2, SHIFT, 117}, {6, SHIFT, 51}, {18, SHIFT, 261}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 195}, {2, SHIFT, 117}, {6, SHIFT, 51}, {18, SHIFT, 263}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 196}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 69}, },
			{{-1, ERROR, 198}, {40, SHIFT, 266}, {43, SHIFT, 267}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 87}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 204}, {38, SHIFT, 54}, {41, SHIFT, 56}, {42, SHIFT, 57}, },
			{{-1, ERROR, 205}, {34, SHIFT, 269}, },
			{{-1, REDUCE, 230}, },
			{{-1, ERROR, 207}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, },
			{{-1, REDUCE, 224}, },
			{{-1, ERROR, 209}, {50, SHIFT, 271}, },
			{{-1, ERROR, 210}, {34, SHIFT, 273}, },
			{{-1, REDUCE, 232}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 99}, {10, SHIFT, 14}, {30, SHIFT, 15}, },
			{{-1, REDUCE, 39}, {26, SHIFT, 69}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 141}, },
			{{-1, REDUCE, 140}, {34, SHIFT, 217}, },
			{{-1, REDUCE, 234}, },
			{{-1, REDUCE, 128}, {26, SHIFT, 69}, },
			{{-1, REDUCE, 131}, },
			{{-1, REDUCE, 133}, },
			{{-1, ERROR, 223}, {34, SHIFT, 277}, {36, SHIFT, 278}, },
			{{-1, REDUCE, 163}, },
			{{-1, REDUCE, 162}, {4, SHIFT, 223}, },
			{{-1, REDUCE, 158}, {4, SHIFT, 223}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {36, SHIFT, 157}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 158}, },
			{{-1, ERROR, 227}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, },
			{{-1, REDUCE, 166}, {48, SHIFT, 198}, {54, SHIFT, 199}, {55, SHIFT, 200}, {57, SHIFT, 201}, },
			{{-1, ERROR, 229}, {6, SHIFT, 51}, {27, SHIFT, 283}, {29, SHIFT, 52}, {34, SHIFT, 53}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, },
			{{-1, REDUCE, 167}, },
			{{-1, REDUCE, 152}, {22, SHIFT, 285}, },
			{{-1, ERROR, 232}, {5, SHIFT, 155}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {35, SHIFT, 156}, {36, SHIFT, 157}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 158}, },
			{{-1, REDUCE, 239}, },
			{{-1, REDUCE, 155}, {47, SHIFT, 232}, },
			{{-1, REDUCE, 242}, },
			{{-1, REDUCE, 159}, },
			{{-1, REDUCE, 146}, {4, SHIFT, 24}, {30, SHIFT, 26}, {34, SHIFT, 27}, },
			{{-1, REDUCE, 193}, },
			{{-1, ERROR, 239}, {43, SHIFT, 290}, },
			{{-1, ERROR, 240}, {34, SHIFT, 92}, },
			{{-1, REDUCE, 194}, },
			{{-1, REDUCE, 195}, {51, SHIFT, 292}, },
			{{-1, REDUCE, 190}, },
			{{-1, REDUCE, 249}, },
			{{-1, ERROR, 245}, {14, SHIFT, 239}, {19, SHIFT, 240}, {20, SHIFT, 241}, {34, SHIFT, 242}, {56, SHIFT, 293}, },
			{{-1, REDUCE, 186}, },
			{{-1, ERROR, 247}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {36, SHIFT, 157}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 158}, {56, SHIFT, 295}, },
			{{-1, REDUCE, 220}, },
			{{-1, REDUCE, 218}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {36, SHIFT, 157}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 158}, },
			{{-1, REDUCE, 213}, },
			{{-1, ERROR, 251}, {5, SHIFT, 172}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {35, SHIFT, 173}, {36, SHIFT, 157}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 158}, },
			{{-1, REDUCE, 255}, },
			{{-1, REDUCE, 215}, {47, SHIFT, 251}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 76}, },
			{{-1, ERROR, 256}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 298}, },
			{{-1, REDUCE, 50}, },
			{{-1, REDUCE, 67}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 66}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 63}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 261}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 58}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 263}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 56}, {2, SHIFT, 117}, {6, SHIFT, 51}, {16, SHIFT, 302}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 62}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 89}, },
			{{-1, ERROR, 267}, {40, SHIFT, 303}, },
			{{-1, REDUCE, 65}, },
			{{-1, ERROR, 269}, {44, SHIFT, 304}, },
			{{-1, ERROR, 270}, {56, SHIFT, 305}, },
			{{-1, ERROR, 271}, {34, SHIFT, 217}, },
			{{-1, ERROR, 272}, {44, SHIFT, 306}, {50, SHIFT, 271}, },
			{{-1, ERROR, 273}, {43, SHIFT, 307}, },
			{{-1, REDUCE, 98}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 134}, },
			{{-1, ERROR, 277}, {55, SHIFT, 308}, },
			{{-1, ERROR, 278}, {34, SHIFT, 309}, },
			{{-1, REDUCE, 164}, },
			{{-1, REDUCE, 160}, },
			{{-1, ERROR, 281}, {6, SHIFT, 51}, {27, SHIFT, 310}, {29, SHIFT, 52}, {34, SHIFT, 53}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, },
			{{-1, REDUCE, 168}, },
			{{-1, ERROR, 283}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, },
			{{-1, ERROR, 284}, {44, SHIFT, 313}, },
			{{-1, REDUCE, 175}, {12, SHIFT, 314}, {24, SHIFT, 315}, {33, SHIFT, 316}, },
			{{-1, REDUCE, 153}, },
			{{-1, REDUCE, 156}, },
			{{-1, REDUCE, 240}, },
			{{-1, REDUCE, 147}, {4, SHIFT, 24}, {30, SHIFT, 26}, {34, SHIFT, 27}, },
			{{-1, ERROR, 290}, {19, SHIFT, 319}, {34, SHIFT, 320}, {44, SHIFT, 321}, },
			{{-1, ERROR, 291}, {43, SHIFT, 324}, },
			{{-1, ERROR, 292}, {34, SHIFT, 325}, },
			{{-1, REDUCE, 191}, },
			{{-1, REDUCE, 250}, },
			{{-1, REDUCE, 187}, },
			{{-1, REDUCE, 216}, },
			{{-1, REDUCE, 256}, },
			{{-1, ERROR, 298}, {2, SHIFT, 117}, {6, SHIFT, 51}, {15, SHIFT, 118}, {28, SHIFT, 119}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 299}, {44, SHIFT, 326}, },
			{{-1, REDUCE, 59}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 57}, {2, SHIFT, 117}, {6, SHIFT, 51}, {16, SHIFT, 327}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 302}, {2, SHIFT, 117}, {6, SHIFT, 51}, {18, SHIFT, 328}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 303}, {58, SHIFT, 330}, {59, SHIFT, 331}, },
			{{-1, ERROR, 304}, {56, SHIFT, 332}, },
			{{-1, REDUCE, 94}, },
			{{-1, REDUCE, 122}, },
			{{-1, ERROR, 307}, {34, SHIFT, 333}, },
			{{-1, REDUCE, 173}, },
			{{-1, ERROR, 309}, {55, SHIFT, 334}, },
			{{-1, ERROR, 310}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, },
			{{-1, ERROR, 311}, {44, SHIFT, 336}, },
			{{-1, ERROR, 312}, {44, SHIFT, 337}, },
			{{-1, ERROR, 313}, {48, SHIFT, 198}, {54, SHIFT, 199}, {57, SHIFT, 201}, },
			{{-1, ERROR, 314}, {34, SHIFT, 339}, },
			{{-1, ERROR, 315}, {34, SHIFT, 339}, },
			{{-1, ERROR, 316}, {34, SHIFT, 339}, },
			{{-1, REDUCE, 243}, },
			{{-1, REDUCE, 176}, {12, SHIFT, 314}, {24, SHIFT, 315}, {33, SHIFT, 316}, },
			{{-1, ERROR, 319}, {34, SHIFT, 92}, },
			{{-1, REDUCE, 201}, {51, SHIFT, 345}, {58, SHIFT, 346}, },
			{{-1, REDUCE, 199}, },
			{{-1, REDUCE, 251}, },
			{{-1, ERROR, 323}, {19, SHIFT, 319}, {34, SHIFT, 320}, {44, SHIFT, 347}, },
			{{-1, ERROR, 324}, {14, SHIFT, 239}, {19, SHIFT, 240}, {20, SHIFT, 241}, {34, SHIFT, 242}, {44, SHIFT, 349}, },
			{{-1, REDUCE, 196}, },
			{{-1, ERROR, 326}, {48, SHIFT, 198}, {54, SHIFT, 199}, {57, SHIFT, 201}, },
			{{-1, ERROR, 327}, {2, SHIFT, 117}, {6, SHIFT, 51}, {18, SHIFT, 352}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 328}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 52}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, ERROR, 330}, {44, SHIFT, 355}, },
			{{-1, ERROR, 331}, {40, SHIFT, 356}, },
			{{-1, REDUCE, 118}, },
			{{-1, ERROR, 333}, {44, SHIFT, 357}, },
			{{-1, REDUCE, 174}, },
			{{-1, ERROR, 335}, {44, SHIFT, 358}, },
			{{-1, ERROR, 336}, {48, SHIFT, 198}, {54, SHIFT, 199}, {57, SHIFT, 201}, },
			{{-1, ERROR, 337}, {48, SHIFT, 198}, {54, SHIFT, 199}, {57, SHIFT, 201}, },
			{{-1, REDUCE, 171}, },
			{{-1, REDUCE, 137}, {50, SHIFT, 148}, },
			{{-1, ERROR, 340}, {56, SHIFT, 361}, },
			{{-1, ERROR, 341}, {56, SHIFT, 362}, },
			{{-1, ERROR, 342}, {56, SHIFT, 363}, },
			{{-1, REDUCE, 244}, },
			{{-1, ERROR, 344}, {43, SHIFT, 364}, },
			{{-1, ERROR, 345}, {12, SHIFT, 365}, {24, SHIFT, 366}, {34, SHIFT, 367}, },
			{{-1, REDUCE, 203}, },
			{{-1, REDUCE, 200}, },
			{{-1, REDUCE, 252}, },
			{{-1, REDUCE, 197}, },
			{{-1, ERROR, 350}, {14, SHIFT, 239}, {19, SHIFT, 240}, {20, SHIFT, 241}, {34, SHIFT, 242}, {44, SHIFT, 368}, },
			{{-1, REDUCE, 72}, },
			{{-1, ERROR, 352}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 53}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 54}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 91}, },
			{{-1, ERROR, 356}, {44, SHIFT, 370}, },
			{{-1, ERROR, 357}, {56, SHIFT, 371}, },
			{{-1, ERROR, 358}, {48, SHIFT, 198}, {54, SHIFT, 199}, {57, SHIFT, 201}, },
			{{-1, REDUCE, 172}, },
			{{-1, REDUCE, 169}, },
			{{-1, REDUCE, 177}, },
			{{-1, REDUCE, 178}, },
			{{-1, REDUCE, 179}, },
			{{-1, ERROR, 364}, {14, SHIFT, 239}, {19, SHIFT, 240}, {20, SHIFT, 241}, {34, SHIFT, 242}, {44, SHIFT, 373}, },
			{{-1, ERROR, 365}, {58, SHIFT, 375}, },
			{{-1, ERROR, 366}, {58, SHIFT, 376}, },
			{{-1, REDUCE, 202}, {51, SHIFT, 377}, {58, SHIFT, 378}, },
			{{-1, REDUCE, 198}, },
			{{-1, REDUCE, 55}, {2, SHIFT, 117}, {6, SHIFT, 51}, {29, SHIFT, 52}, {34, SHIFT, 53}, {37, SHIFT, 120}, {38, SHIFT, 54}, {39, SHIFT, 55}, {41, SHIFT, 56}, {42, SHIFT, 57}, {43, SHIFT, 121}, },
			{{-1, REDUCE, 90}, },
			{{-1, REDUCE, 121}, },
			{{-1, REDUCE, 170}, },
			{{-1, REDUCE, 209}, },
			{{-1, ERROR, 374}, {14, SHIFT, 239}, {19, SHIFT, 240}, {20, SHIFT, 241}, {34, SHIFT, 242}, {44, SHIFT, 379}, },
			{{-1, REDUCE, 205}, },
			{{-1, REDUCE, 207}, },
			{{-1, ERROR, 377}, {12, SHIFT, 380}, {24, SHIFT, 381}, },
			{{-1, REDUCE, 204}, },
			{{-1, REDUCE, 210}, },
			{{-1, ERROR, 380}, {58, SHIFT, 382}, },
			{{-1, ERROR, 381}, {58, SHIFT, 383}, },
			{{-1, REDUCE, 206}, },
			{{-1, REDUCE, 208}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 10}, },
			{{-1, 17}, {23, 77}, },
			{{-1, 187}, {66, 122}, },
			{{-1, 123}, {189, 257}, },
			{{-1, 124}, },
			{{-1, 125}, {118, 185}, {119, 186}, {191, 258}, {192, 259}, {193, 260}, {194, 262}, {195, 264}, {196, 265}, {261, 300}, {263, 301}, {302, 329}, {327, 353}, {328, 354}, {352, 369}, },
			{{-1, 126}, {125, 197}, {185, 197}, {186, 197}, {258, 197}, {259, 197}, {260, 197}, {262, 197}, {264, 197}, {265, 197}, {300, 197}, {301, 197}, {329, 197}, {353, 197}, {354, 197}, {369, 197}, },
			{{-1, 127}, {121, 188}, {256, 299}, },
			{{-1, 128}, {14, 59}, {15, 59}, {68, 133}, {84, 159}, {100, 159}, {112, 182}, {135, 133}, {156, 159}, {157, 228}, {158, 229}, {163, 159}, {170, 159}, {173, 159}, {176, 159}, {183, 182}, {207, 270}, {226, 159}, {227, 281}, {229, 284}, {232, 159}, {247, 159}, {249, 159}, {251, 159}, {281, 311}, {283, 312}, {310, 335}, },
			{{-1, 60}, {66, 129}, {121, 129}, {189, 129}, {204, 268}, {298, 129}, },
			{{-1, 202}, {159, 230}, {228, 282}, },
			{{-1, 203}, {313, 338}, {326, 351}, {336, 359}, {337, 360}, {358, 372}, },
			{{-1, 70}, {78, 145}, },
			{{-1, 134}, {135, 208}, },
			{{-1, 18}, {23, 78}, },
			{{-1, 19}, },
			{{-1, 74}, {75, 144}, },
			{{-1, 20}, {213, 274}, },
			{{-1, 21}, },
			{{-1, 64}, },
			{{-1, 22}, {21, 76}, },
			{{-1, 61}, },
			{{-1, 62}, {15, 65}, },
			{{-1, 113}, {114, 184}, },
			{{-1, 71}, {28, 85}, {70, 140}, {78, 146}, {83, 153}, {145, 214}, {151, 220}, },
			{{-1, 131}, {132, 206}, },
			{{-1, 72}, {28, 86}, {70, 141}, {71, 142}, {78, 147}, {83, 154}, {85, 164}, {140, 212}, {145, 215}, {146, 216}, {151, 221}, {153, 222}, {214, 275}, {220, 276}, },
			{{-1, 137}, {139, 211}, },
			{{-1, 138}, },
			{{-1, 11}, {10, 42}, },
			{{-1, 81}, },
			{{-1, 82}, {314, 340}, {315, 341}, {316, 342}, },
			{{-1, 149}, {150, 219}, {272, 219}, },
			{{-1, 28}, {25, 83}, {81, 151}, },
			{{-1, 29}, },
			{{-1, 88}, {89, 166}, },
			{{-1, 30}, {33, 91}, {289, 91}, },
			{{-1, 31}, },
			{{-1, 32}, {31, 90}, },
			{{-1, 160}, },
			{{-1, 233}, {234, 288}, },
			{{-1, 161}, {232, 287}, },
			{{-1, 162}, {163, 235}, {176, 235}, {226, 235}, {247, 235}, {249, 235}, },
			{{-1, 224}, {163, 236}, {225, 279}, {226, 280}, },
			{{-1, 286}, },
			{{-1, 317}, {318, 343}, },
			{{-1, 12}, {10, 43}, {11, 46}, {42, 103}, },
			{{-1, 36}, },
			{{-1, 97}, {98, 171}, },
			{{-1, 37}, {36, 99}, },
			{{-1, 93}, {95, 169}, },
			{{-1, 94}, {240, 291}, {319, 344}, },
			{{-1, 244}, {245, 294}, {350, 294}, {374, 294}, },
			{{-1, 322}, {323, 348}, },
			{{-1, 13}, {10, 44}, {11, 47}, {12, 49}, {42, 104}, {43, 106}, {46, 109}, {103, 178}, },
			{{-1, 39}, {40, 101}, },
			{{-1, 174}, },
			{{-1, 252}, {253, 297}, },
			{{-1, 175}, {251, 296}, },
			{{-1, 23}, },
			{{-1, 135}, },
			{{-1, 75}, },
			{{-1, 114}, },
			{{-1, 132}, },
			{{-1, 139}, },
			{{-1, 150}, {209, 272}, },
			{{-1, 89}, },
			{{-1, 33}, {237, 289}, },
			{{-1, 234}, },
			{{-1, 163}, {100, 176}, {156, 226}, {170, 247}, {173, 249}, {251, 176}, },
			{{-1, 318}, },
			{{-1, 98}, },
			{{-1, 95}, },
			{{-1, 245}, {324, 350}, {364, 374}, },
			{{-1, 323}, },
			{{-1, 40}, },
			{{-1, 253}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'Grammar'",
			"expecting: identifier",
			"expecting: EOF",
			"expecting: ':'",
			"expecting: 'Lexer', 'Parser', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Context', 'Ignored', 'Investigator', 'Parser', 'Precedence', 'Selector', 'Token', 'Transformation', 'Tree', identifier, ctrl z, EOF",
			"expecting: 'Context', 'Dangling', 'Investigator', 'Root', 'Selector', 'Token', 'Transformation', 'Tree', identifier, ctrl z, EOF",
			"expecting: 'Alternative', 'Production', 'Tree', ctrl z, EOF",
			"expecting: identifier, ctrl z, EOF",
			"expecting: 'Parser', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Tree', ctrl z, EOF",
			"expecting: ctrl z, EOF",
			"expecting: 'Context', 'End', 'Investigator', 'Parser', 'Precedence', 'Selector', 'Start', 'Transformation', 'Tree', identifier, char, string, dec char, hex char, ';', ctrl z, EOF",
			"expecting: 'Context', 'End', 'Ignored', 'Investigator', 'Parser', 'Precedence', 'Selector', 'Start', 'Transformation', 'Tree', identifier, char, string, dec char, hex char, ';', ctrl z, EOF",
			"expecting: '='",
			"expecting: 'Investigator', 'Parser', 'Precedence', 'Selector', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Context', 'Investigator', 'Parser', 'Precedence', 'Selector', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Context', 'Ignored', 'Investigator', 'Parser', 'Precedence', 'Selector', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Context', 'Dangling', 'Investigator', 'Selector', 'Token', 'Transformation', 'Tree', identifier, ';', ctrl z, EOF",
			"expecting: 'Investigator', 'Selector', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Context', 'Investigator', 'Selector', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Context', 'Dangling', 'Investigator', 'Selector', 'Token', 'Transformation', 'Tree', identifier, ctrl z, EOF",
			"expecting: 'Tree', identifier, ctrl z, EOF",
			"expecting: 'Alternative', 'Tree', identifier, ctrl z, EOF",
			"expecting: 'Alternative', 'Tree', ctrl z, EOF",
			"expecting: 'And', 'Any', 'Dangling', 'End', 'Except', 'Lookahead', 'Lookback', 'Separator', 'Start', identifier, element name, epsilon, char, string, dec char, hex char, '(', ')', '|', '^', ',', '>', '-', '+', '?', ';', '*'",
			"expecting: 'And', 'Any', 'Dangling', 'End', 'Except', 'Lookahead', 'Lookback', 'Separator', 'Start', identifier, element name, epsilon, char, string, dec char, hex char, '(', ')', '|', '^', ',', '>', '-', '+', '?', ';', '*', '..'",
			"expecting: ',', ';'",
			"expecting: ';'",
			"expecting: 'Any', 'End', 'Longest', 'Shortest', 'Start', identifier, epsilon, char, string, dec char, hex char, '('",
			"expecting: 'Parser', 'Selector', 'Transformation', 'Tree', identifier, ctrl z, EOF",
			"expecting: 'End', 'Investigator', 'Parser', 'Selector', 'Start', 'Transformation', 'Tree', identifier, char, string, dec char, hex char, ctrl z, EOF",
			"expecting: 'Parser', 'Transformation', 'Tree', '(', ctrl z, EOF",
			"expecting: 'Investigator', 'Parser', 'Selector', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: 'Parser', 'Selector', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: '=', ',', ';'",
			"expecting: 'Empty', 'End', 'Start', identifier, alternative name, element name, char, string, dec char, hex char, '('",
			"expecting: 'Selector', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: '(', '->', '.'",
			"expecting: '->'",
			"expecting: 'End', 'Start', identifier, char, string, dec char, hex char, ';'",
			"expecting: 'And', 'Any', 'End', 'Except', 'Lookahead', 'Lookback', 'Separator', 'Start', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', '^', '-', '+', '?', ';', '*'",
			"expecting: 'Any', 'End', 'Start', identifier, epsilon, char, string, dec char, hex char, '('",
			"expecting: '|', ';'",
			"expecting: ')', '|', ';'",
			"expecting: 'And', ')', '|', ';'",
			"expecting: 'And', 'Any', 'End', 'Except', 'Lookahead', 'Lookback', 'Start', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', '-', ';'",
			"expecting: 'And', 'Any', 'End', 'Except', 'Lookahead', 'Lookback', 'Start', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', '^', '-', '+', '?', ';', '*'",
			"expecting: 'And', 'Any', 'End', 'Except', 'Lookahead', 'Lookback', 'Separator', 'Start', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', '^', '-', '+', '?', ';', '*', '..'",
			"expecting: '('",
			"expecting: '>'",
			"expecting: identifier, ';'",
			"expecting: ')', ',', ';'",
			"expecting: 'Dangling', '|', ';'",
			"expecting: 'Empty', 'End', 'Start', identifier, element name, char, string, dec char, hex char, '('",
			"expecting: 'End', 'Start', identifier, char, string, dec char, hex char, '('",
			"expecting: 'End', 'Start', identifier, char, string, dec char, hex char",
			"expecting: 'Dangling', 'End', 'Start', identifier, element name, char, string, dec char, hex char, '(', '|', '^', '+', '?', ';', '*'",
			"expecting: 'Dangling', 'End', 'Start', identifier, element name, char, string, dec char, hex char, '(', '|', ';'",
			"expecting: 'List', 'New', 'Null', identifier, ';'",
			"expecting: 'End', 'Start', identifier, element name, char, string, dec char, hex char, '(', ';'",
			"expecting: 'End', 'Start', identifier, element name, char, string, dec char, hex char, '(', '|', ';'",
			"expecting: 'Any', 'End', 'Start', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', ';'",
			"expecting: ')', '|'",
			"expecting: 'And', 'Any', 'End', 'Except', 'Lookahead', 'Lookback', 'Separator', 'Start', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', '^', '-', '+', '?', '*'",
			"expecting: 'Any', 'End', 'Not', 'Start', identifier, epsilon, char, string, dec char, hex char, '('",
			"expecting: number, '('",
			"expecting: 'And', 'Any', 'Dangling', 'End', 'Except', 'Lookahead', 'Lookback', 'Start', identifier, element name, epsilon, char, string, dec char, hex char, '(', ')', '|', '-', ';'",
			"expecting: char, dec char, hex char",
			"expecting: ','",
			"expecting: 'Context', 'Ignored', 'Investigator', 'Parser', 'Precedence', 'Selector', 'Token', 'Transformation', 'Tree', ctrl z, EOF",
			"expecting: identifier, element name",
			"expecting: 'End', 'Separator', 'Start', identifier, char, string, dec char, hex char",
			"expecting: 'Context', 'Dangling', 'Investigator', 'Precedence', 'Selector', 'Token', 'Transformation', 'Tree', identifier, ctrl z, EOF",
			"expecting: '(', '->'",
			"expecting: 'List', 'New', 'Null', identifier, ')', ';'",
			"expecting: 'List', 'New', 'Null', identifier, ')', '.', ';'",
			"expecting: 'And', 'Any', 'End', 'Start', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', ';'",
			"expecting: 'Any', 'End', 'Lookahead', 'Start', identifier, epsilon, char, string, dec char, hex char, '(', ')', '|', ';'",
			"expecting: number",
			"expecting: ')'",
			"expecting: ')', ','",
			"expecting: '?'",
			"expecting: 'Context', 'Dangling', 'Investigator', 'Left', 'Right', 'Selector', 'Token', 'Transformation', 'Tree', 'Unary', identifier, ctrl z, EOF",
			"expecting: 'New', identifier, ')'",
			"expecting: '...', '..'",
			"expecting: '^', '+', '*'",
			"expecting: 'New', identifier, ')', '.', '...'",
			"expecting: 'List', 'New', 'Null', identifier, ')'",
			"expecting: 'Left', 'Right', identifier",
			"expecting: '...'",
			"expecting: 'Left', 'Right'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 5, 6, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 5, 16, 17, 17, 18, 17, 5, 1, 19, 1, 15, 20, 21, 22, 1, 22, 22, 23, 24, 25, 11, 15, 8, 8, 2, 10, 11, 12, 2, 11, 12, 2, 12, 2, 26, 26, 26, 27, 26, 27, 27, 17, 28, 26, 17, 29, 18, 18, 29, 30, 31, 32, 33, 34, 35, 9, 1, 17, 17, 17, 5, 16, 36, 22, 22, 29, 20, 37, 38, 10, 1, 21, 21, 22, 22, 39, 23, 40, 23, 40, 24, 24, 11, 37, 8, 2, 11, 12, 2, 12, 2, 2, 12, 2, 2, 41, 28, 28, 17, 18, 42, 43, 43, 42, 30, 44, 45, 46, 47, 47, 48, 42, 49, 50, 31, 31, 51, 32, 32, 1, 33, 15, 33, 35, 9, 9, 3, 17, 34, 35, 9, 52, 53, 28, 20, 22, 38, 10, 54, 55, 56, 57, 58, 29, 44, 59, 59, 10, 3, 21, 1, 60, 23, 61, 24, 44, 55, 29, 44, 62, 2, 12, 2, 2, 2, 28, 41, 28, 63, 63, 64, 65, 30, 5, 43, 43, 43, 66, 66, 43, 47, 67, 68, 68, 68, 47, 68, 69, 1, 31, 57, 32, 70, 1, 33, 9, 71, 35, 9, 9, 53, 52, 53, 38, 10, 10, 72, 44, 54, 59, 57, 58, 73, 59, 74, 37, 44, 44, 59, 44, 22, 75, 50, 1, 76, 77, 23, 76, 60, 24, 61, 44, 62, 8, 37, 44, 44, 2, 42, 43, 45, 78, 78, 63, 43, 63, 43, 79, 63, 68, 80, 45, 81, 29, 1, 82, 50, 17, 9, 10, 83, 1, 44, 44, 73, 59, 57, 81, 84, 22, 44, 44, 22, 85, 50, 1, 23, 76, 24, 44, 44, 30, 81, 63, 79, 66, 86, 29, 32, 15, 1, 44, 83, 57, 81, 81, 87, 1, 1, 1, 84, 84, 1, 88, 76, 85, 85, 89, 76, 87, 66, 43, 63, 81, 80, 31, 81, 44, 81, 87, 87, 59, 28, 29, 29, 29, 84, 50, 90, 85, 76, 85, 76, 89, 47, 43, 63, 63, 68, 81, 29, 87, 59, 59, 84, 84, 84, 89, 91, 91, 88, 76, 63, 68, 33, 59, 85, 89, 85, 85, 92, 85, 85, 91, 91, 85, 85, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
